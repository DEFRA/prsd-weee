@using EA.Weee.Web.RazorHelpers
@using EA.Weee.Web.Areas.Admin.Controllers
@using MvcNavigationHelpers
@model EA.Weee.Web.Areas.Admin.ViewModels.Obligations.UploadObligationsViewModel
@{
    ViewBag.Title = "Manage PCS obligations";
}

@section full_main_content
{
    @(this.WeeeGds().BackLink(Url.UrlFor<ObligationsController>(a => a.SelectAuthority())))
    <header class="hgroup">
        <div>
            <h1 class="govuk-heading-l">Manage PCS obligations</h1>
        </div>
    </header>
    @if (Model.AnyError)
    {
        <div class="error-summary govuk-error-summary" id="error_explanation" aria-labelledby="error-summary-title" role="alert" aria-atomic="true" data-module="govuk-error-summary">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                There is a problem
            </h2>
            <div class="govuk-error-summary__body">
                <ul class="govuk-list govuk-error-summary__list">
                    @if (Model.DisplaySelectFileError)
                    {
                        <li>
                            <a href="#File">You have not selected a file</a>
                            <p class="govuk-error-message govuk-!-font-weight-regular">@Html.Gds().VisuallyHidden("Error:") You must select a file before you can upload it</p>
                        </li>
                    }
                    @if (Model.DisplayDataError)
                    {
                        <li>
                            <a href="#File">Your file contains @Model.NumberOfDataErrors data error@(Model.NumberOfDataErrors == 1 ? "" : "s")</a>
                            <p class="govuk-error-message govuk-!-font-weight-regular">@Html.Gds().VisuallyHidden("Error:") There may be a problem with the data in the file, which prevents our system from validating it. You should rectify any errors before we can continue our validation process.</p>
                        </li>
                    }
                    @if (Model.DisplayFormatError)
                    {
                        <li>
                            <a href="#File">Your file is in the wrong format</a>
                            <p class="govuk-error-message govuk-!-font-weight-regular">@Html.Gds().VisuallyHidden("Error:")The error may be a problem with the file structure, which prevents our system from validating your file. You should rectify this error before we can continue our validation process.</p>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
    @if (Model.DisplaySuccessMessage)
    {
        @(this.WeeeGds().Panel(Model.UploadedMessage))
    }

    <p>
        To upload your PCS's obligations, you need to first download the CSV template for the current compliance year. After this you can fill in the template with the data and upload it.
    </p>
    <p>
        @Html.ActionLink("Download template", "DownloadTemplate", new { authority = Model.Authority })
    </p>

    @using (Html.BeginForm("UploadObligations", "Obligations", FormMethod.Get, new { id = "ComplianceYearForm" }))
    {
        @Html.HiddenFor(m => m.Authority)
        <span class="govuk-body"><strong>@Html.LabelFor(m => m.SelectedComplianceYear)</strong></span>
        <span class="text-margin govuk-!-padding-right-3">
            @Html.Gds().DropDownListFor(m => m.SelectedComplianceYear,
                new SelectList(Model.ComplianceYearList),
                new { autocomplete = "false" }, false, false)
        </span>
        <noscript>
            @(this.WeeeGds().Button("Apply", null, true))
        </noscript>
        <div class="govuk-!-padding-bottom-7"></div>
    }

    @using (Html.BeginForm("UploadObligations", "Obligations", FormMethod.Post, new
    {
        enctype = "multipart/form-data",
    }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Authority)
        @Html.HiddenFor(m => m.SelectedComplianceYear)

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.File)">
            @(this.WeeeGds().ScreenVisuallyHiddenLabelFor(m => m.File))
            @Html.Gds().ValidationMessageFor(m => m.File)
            <input class="govuk-file-upload" id="File" data-val="true" name="File" accept=".csv" type="file">
        </div>

        @(this.WeeeGds().Button("Upload file"))

        <table id="pcs-obligation-table" class="govuk-table">
            <caption class="govuk-table__caption govuk-visually-hidden">PCS obligation</caption>
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header" style="width: 76%;">
                        PCS
                    </th>
                    <th scope="col" class="govuk-table__header govuk-!-padding-left-0 govuk-!-text-align-right">
                        Obligation updated (GMT)
                    </th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @if (!Model.AnyObligation)
                {
                    <tr class="govuk-table__row">
                        <td colspan="2">
                            <p>There are currently no PCS obligations uploaded</p>
                        </td>
                    </tr>
                }
                else
                {
                    for (var schemeCount = 0; schemeCount < Model.SchemeObligations.Count; schemeCount++)
                    {
                        @Html.HiddenFor(m => m.SchemeObligations[schemeCount].SchemeName)
                        @Html.HiddenFor(m => m.SchemeObligations[schemeCount].UpdateDate)
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">
                                @Model.SchemeObligations.ElementAt(schemeCount).SchemeName
                            </td>
                            <td class="govuk-table__cell govuk-!-padding-left-2 govuk-!-text-left-right">
                                @Model.SchemeObligations.ElementAt(schemeCount).UpdateDate
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
}
@section scripts {
    @if (ViewBag.TriggerDownload != null && ViewBag.TriggerDownload)
    {
        <script type="text/javascript">
            window.location = "@Html.Raw(@Url.Action("DownloadTemplate", new
                               {
                                    authority = Model.Authority
                               }))";
        </script>
    }
}