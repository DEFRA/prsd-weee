@using EA.Prsd.Core.Helpers
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.DataStandards
@using EA.Weee.Core.Helpers
@using EA.Weee.Core.Organisations
@using EA.Weee.Core.Organisations.Base
@using EA.Weee.Domain.Producer
@using EA.Weee.Web.Areas.Producer.Controllers
@using EA.Weee.Web.Areas.Producer.ViewModels
@using MvcNavigationHelpers
@using EA.Weee.Web.Controllers
@using EA.Weee.Web.Extensions
@using EA.Weee.Web.RazorHelpers
@using EA.Weee.Web.ViewModels.Shared
@using EnumHelper = EA.Prsd.Core.Helpers.EnumHelper
@model EA.Weee.Web.Areas.Producer.ViewModels.EditOrganisationDetailsViewModel
@{
    const string title = "Organisation details";
    ViewBag.Title = title + " - GOV.UK";
}
<style>

    .flex-container {
        display: flex;
        align-items: center;
        padding-left: 15px;
    }

    .label-width {
        width: 30%;
        flex-shrink: 0;
    }
</style>
@section full_main_content
{
    @(this.WeeeGds().BackLink(@Url.UrlFor<ProducerController>(a => a.TaskList())))

    @{
        var step = @Model.HasAuthorisedRepresentitive ? "5" : "4";
    }
    <span class="govuk-caption-xl govuk-!-padding-bottom-3">Step 1 of @step</span>

    <header class="hgroup">
        <h1 class="govuk-heading-l">@title</h1>
    </header>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Gds().ValidationSummary()
        @Html.HiddenFor(m => m.OrganisationId)
        @Html.HiddenFor(m => m.DirectRegistrantId)
        @Html.HiddenFor(m => m.HasAuthorisedRepresentitive)
        @Html.HiddenFor(m => m.Organisation.OrganisationType)
        @Html.HiddenFor(m => m.Organisation.CompaniesRegistrationNumber)

        <div class="govuk-grid-row govuk-!-padding-bottom-2">
            <div class="flex-container">
                <span class="govuk-body govuk-label--s label-width" for="Organisation_OrganisationType" id="Organisation_OrganisationType-label">Organisation type</span>
                <span class="govuk-body" aria-labelledby="Organisation_OrganisationType-label" name="Organisation_OrganisationType" id="Organisation.OrganisationType">@Model.Organisation.OrganisationType.GetDisplayName()</span>
            </div>
        </div>
        <div class="govuk-grid-row govuk-!-padding-bottom-2">
            <div class="flex-container">
                <span class="govuk-body govuk-label--s label-width" for="Organisation_CompaniesRegistrationNumber" id="Organisation_CompaniesRegistrationNumber-label">Company registration number</span>
                <span class="govuk-body" aria-labelledby="Organisation_CompaniesRegistrationNumber-label" name="Organisation_CompaniesRegistrationNumber" id="Organisation.CompaniesRegistrationNumber">@Model.Organisation.CompaniesRegistrationNumber</span>
            </div>
        </div>

        @Html.EditorForAs(model => model.Organisation)

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Organisation.Address.WebsiteAddress)">
            @Html.Gds().LabelFor(m => m.Organisation.Address.WebsiteAddress)
            @Html.Gds().ValidationMessageFor(m => m.Organisation.Address.WebsiteAddress)
            @Html.Gds().TextBoxFor(m => m.Organisation.Address.WebsiteAddress, new { @maxlength = CommonMaxFieldLengths.WebsiteAddress })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Organisation.Address.Address1)">
            @Html.Gds().LabelFor(m => m.Organisation.Address.Address1)
            @Html.Gds().ValidationMessageFor(m => m.Organisation.Address.Address1)
            @Html.Gds().TextBoxFor(m => m.Organisation.Address.Address1, new { @maxlength = CommonMaxFieldLengths.AddressLine })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Organisation.Address.Address2)">
            @Html.Gds().LabelFor(m => m.Organisation.Address.Address2)
            @Html.Gds().ValidationMessageFor(m => m.Organisation.Address.Address2)
            @Html.Gds().TextBoxFor(m => m.Organisation.Address.Address2, new { @maxlength = CommonMaxFieldLengths.AddressLine })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Organisation.Address.TownOrCity)">
            @Html.Gds().LabelFor(m => m.Organisation.Address.TownOrCity)
            @Html.Gds().ValidationMessageFor(m => m.Organisation.Address.TownOrCity)
            @Html.Gds().TextBoxFor(m => m.Organisation.Address.TownOrCity, new { @maxlength = CommonMaxFieldLengths.TownCounty })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Organisation.Address.CountyOrRegion)">
            @Html.Gds().LabelFor(m => m.Organisation.Address.CountyOrRegion)
            @Html.Gds().ValidationMessageFor(m => m.Organisation.Address.CountyOrRegion)
            @Html.Gds().TextBoxFor(m => m.Organisation.Address.CountyOrRegion, new { @maxlength = CommonMaxFieldLengths.TownCounty })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Organisation.Address.Postcode)">
            @Html.Gds().LabelFor(m => m.Organisation.Address.Postcode)
            @Html.Gds().ValidationMessageFor(m => m.Organisation.Address.Postcode)
            @Html.Gds().TextBoxFor(m => m.Organisation.Address.Postcode, new { @maxlength = CommonMaxFieldLengths.Postcode })
        </div>

        <h2 class="govuk-heading-s">Enter the country your organisation is based in.</h2>
        <div class="govuk-form-group countries govuk-!-margin-bottom-8 @Html.Gds().FormGroupClass(m => m.Organisation.Address.CountryId)" id="operator-country-dropdown-list">
            @Html.Gds().LabelFor(m => m.Organisation.Address.CountryId, new { id = "country-dropdown-list" })
            @Html.Gds().ValidationMessageFor(m => m.Organisation.Address.CountryId)
            @Html.DropDownListFor(m => m.Organisation.Address.CountryId, new SelectList(Model.Organisation.Address.Countries, "Id", "Name"), string.Empty, new { @class = "govuk-!-width-one-half govuk-input", aria_labelledby = "country-dropdown-list" })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.Organisation.EEEBrandNames)">
            <h2 class="govuk-heading-s">Enter EEE brand names that you place on the UK market</h2>
            @Html.Gds().LabelFor(m => m.Organisation.EEEBrandNames, showOptionalLabel: false)
            @Html.Gds().ValidationMessageFor(m => m.Organisation.EEEBrandNames)
            @Html.Gds().TextAreaFor(m => m.Organisation.EEEBrandNames)
        </div>

        @(this.WeeeGds().Warning(Resources.ProducerSubmission.ProducerSubmission.OrganisationDetailsWarningText))

        if (Model.AdditionalContactModels != null && Model.AdditionalContactModels.Any())
        {
            for (var i = 0; i < Model.AdditionalContactModels.Count; i++)
            {

                var heading = Model.Organisation.OrganisationType == ExternalOrganisationType.Partnership ? "Partner " + (i + 1).ToString() + " details" : "Sole trader details";

                <h2 class="govuk-heading-m">@heading</h2>

                var contact = Model.AdditionalContactModels[i];
                var index = i.ToString();

                var firstNameLabelFor = "AdditionalContactModels_FirstName_" + index;
                var firstNameLabelId = "AdditionalContactModels_FirstName_" + index + "-label";
                var lastNameLabelFor = "AdditionalContactModels_LastName_" + index;
                var lastNameLabelId = "AdditionalContactModels_LastName_" + index + "-label";

                @Html.HiddenFor(m => m.AdditionalContactModels[i].FirstName)
                @Html.HiddenFor(m => m.AdditionalContactModels[i].LastName)

                <div class="govuk-grid-row govuk-!-padding-bottom-2">
                    <div class="flex-container">
                        <span class="govuk-body govuk-label--s label-width" for="@firstNameLabelFor" id="@firstNameLabelId">First name</span>
                        <span class="govuk-body" aria-labelledby="@firstNameLabelId">@contact.FirstName</span>
                    </div>
                </div>

                <div class="govuk-grid-row govuk-!-padding-bottom-2">
                    <div class="flex-container">
                        <span class="govuk-body govuk-label--s label-width" for="@lastNameLabelFor" id="@lastNameLabelId">Last name</span>
                        <span class="govuk-body" aria-labelledby="@lastNameLabelId">@contact.LastName</span>
                    </div>
                </div>
            }
        }

        <div class="govuk-button-group govuk-!-padding-top-3">
            @this.WeeeGds().Button(Resources.ProducerSubmission.ProducerSubmission.SaveAndReturnTaskList)

            @this.WeeeGds().GovUkButtonLink(Resources.ProducerSubmission.ProducerSubmission.DiscardChanges, @Url.UrlFor<ProducerSubmissionController>(a => a.EditOrganisationDetails()), true)

        </div>
        @(this.WeeeGds().BackToTopLink())
    }
}
