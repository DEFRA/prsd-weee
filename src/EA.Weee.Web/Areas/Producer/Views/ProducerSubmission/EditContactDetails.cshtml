@using EA.Prsd.Core.Helpers
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.DataStandards
@using EA.Weee.Core.Helpers
@using EA.Weee.Core.Organisations
@using EA.Weee.Core.Organisations.Base
@using EA.Weee.Domain.Producer
@using EA.Weee.Web.Areas.Producer.Controllers
@using EA.Weee.Web.Areas.Producer.ViewModels
@using MvcNavigationHelpers
@using EA.Weee.Web.Controllers
@using EA.Weee.Web.Extensions
@using EA.Weee.Web.RazorHelpers
@using EA.Weee.Web.ViewModels.Shared
@using EnumHelper = EA.Prsd.Core.Helpers.EnumHelper
@model EA.Weee.Web.Areas.Producer.ViewModels.EditContactDetailsViewModel
@{
    const string title = "Contact details";
    ViewBag.Title = title + " - GOV.UK";
}
@section full_main_content
{
    @(this.WeeeGds().BackLink(Url.Action("BackToPrevious", "ProducerSubmission", new { redirectToCheckAnswers = Model.RedirectToCheckAnswers })))

    @{
        var step = @Model.HasAuthorisedRepresentitive ? "5" : "4";
    }
    <span class="govuk-caption-xl govuk-!-padding-bottom-3">Step 2 of @step</span>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Gds().ValidationSummary()
        @Html.HiddenFor(m => m.DirectRegistrantId)
        @Html.HiddenFor(m => m.OrganisationId)
        @Html.HiddenFor(m => m.RedirectToCheckAnswers)
        <header class="hgroup">
            <h1 class="govuk-heading-l">@title</h1>
        </header>

        <div class="govuk-body">
            Provide the name and address of the person who is the primary contact. We will send all correspondence to this contact.
            <br /><br />
            For Authorised Representatives of non-UK established producers this will be your own primary details.
        </div>

        <h2 class="govuk-heading-s">@title</h2>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.FirstName)">
            @Html.Gds().LabelFor(m => m.ContactDetails.FirstName)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.FirstName)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.FirstName, new { @maxlength = CommonMaxFieldLengths.FirstName })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.LastName)">
            @Html.Gds().LabelFor(m => m.ContactDetails.LastName)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.LastName)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.LastName, new { @maxlength = CommonMaxFieldLengths.LastName })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.Position)">
            @Html.Gds().LabelFor(m => m.ContactDetails.Position)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.Position)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.Position, new { @maxlength = CommonMaxFieldLengths.Position })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.AddressData.Email)">
            @Html.Gds().LabelFor(m => m.ContactDetails.AddressData.Email)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.AddressData.Email)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.AddressData.Email, new { @maxlength = CommonMaxFieldLengths.EmailAddress })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.AddressData.Telephone)">
            @Html.Gds().LabelFor(m => m.ContactDetails.AddressData.Telephone)
            <p class="govuk-hint">For international numbers include the country code</p>
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.AddressData.Telephone)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.AddressData.Telephone, new { @maxlength = CommonMaxFieldLengths.Telephone })
        </div>

        <h2 class="govuk-heading-s">Contact address</h2>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.AddressData.Address1)">
            @Html.Gds().LabelFor(m => m.ContactDetails.AddressData.Address1)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.AddressData.Address1)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.AddressData.Address1, new { @maxlength = CommonMaxFieldLengths.AddressLine })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.AddressData.Address2)">
            @Html.Gds().LabelFor(m => m.ContactDetails.AddressData.Address2)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.AddressData.Address2)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.AddressData.Address2, new { @maxlength = CommonMaxFieldLengths.AddressLine })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.AddressData.TownOrCity)">
            @Html.Gds().LabelFor(m => m.ContactDetails.AddressData.TownOrCity)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.AddressData.TownOrCity)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.AddressData.TownOrCity, new { @maxlength = CommonMaxFieldLengths.TownCounty })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.AddressData.CountyOrRegion)">
            @Html.Gds().LabelFor(m => m.ContactDetails.AddressData.CountyOrRegion)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.AddressData.CountyOrRegion)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.AddressData.CountyOrRegion, new { @maxlength = CommonMaxFieldLengths.TownCounty })
        </div>

        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.ContactDetails.AddressData.Postcode)">
            @Html.Gds().LabelFor(m => m.ContactDetails.AddressData.Postcode)
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.AddressData.Postcode)
            @Html.Gds().TextBoxFor(m => m.ContactDetails.AddressData.Postcode, new { @maxlength = CommonMaxFieldLengths.Postcode })
        </div>

        <div class="govuk-form-group countries govuk-!-margin-bottom-8 @Html.Gds().FormGroupClass(m => m.ContactDetails.AddressData.CountryId)" id="operator-country-dropdown-list">
            @Html.Gds().LabelFor(m => m.ContactDetails.AddressData.CountryId, new { id = "country-dropdown-list" })
            @Html.Gds().ValidationMessageFor(m => m.ContactDetails.AddressData.CountryId)
            @Html.DropDownListFor(m => m.ContactDetails.AddressData.CountryId, new SelectList(Model.ContactDetails.AddressData.Countries, "Id", "Name"), string.Empty, new { @class = "govuk-!-width-one-half govuk-select", aria_labelledby = "country-dropdown-list" })
        </div>

        @(this.WeeeGds().Warning(Resources.ProducerSubmission.ProducerSubmission.WarningText))

        <div class="govuk-button-group govuk-!-padding-top-3">
            @if (Model.RedirectToCheckAnswers == true)
            {
                @(this.WeeeGds().Button(Resources.ProducerSubmission.ProducerSubmission.SaveAndReturnCheckAnswers))
            }
            else
            {
                @(this.WeeeGds().Button(Resources.ProducerSubmission.ProducerSubmission.SaveAndReturnTaskList))
            }

            @this.WeeeGds().GovUkButtonLink(Resources.ProducerSubmission.ProducerSubmission.DiscardChanges, @Url.UrlFor<ProducerSubmissionController>(a => a.EditContactDetails((bool?)null)), true, "discard-button")

        </div>
        @(this.WeeeGds().BackToTopLink())
    }
}
