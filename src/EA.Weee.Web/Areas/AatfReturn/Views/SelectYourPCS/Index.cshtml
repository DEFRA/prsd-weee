@using System.Web.Mvc.Html
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Web.Areas.AatfReturn.Controllers
@using EA.Weee.Web.Infrastructure
@using MvcNavigationHelpers
@using EA.Weee.Core.Helpers
@model EA.Weee.Web.Areas.AatfReturn.ViewModels.SelectYourPcsViewModel
@{
    ViewBag.Title = "Select all the PCSs that you received WEEE from - GOV.UK";
}

<section id="main-content">


    <div class="govuk-!-padding-bottom-5"></div>
    <div class="govuk-form-group">
        <fieldset class="govuk-fieldset">

            <h1 class="govuk-heading-l">
                Select all the PCSs that you received WEEE from
            </h1>

            @if (Model.PreviousQuarterData.PreviousSchemes.Count > 0)
            {
                using (Html.BeginRouteForm(AatfRedirect.SelectPcsRouteName, FormMethod.Get, new { id = "SelectPcsForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Gds().ValidationSummary()

                    <div class="govuk-checkboxes">
                        <div class="govuk-checkboxes__item">
                            <input type="checkbox" name="copyPrevious" value="true" class="govuk-checkboxes__input" id="CopyPreviousSchemes" />
                            <label class="govuk-label govuk-checkboxes__label">
                                Copy my options from the previous quarter @Model.PreviousQuarterData.PreviousQuarter.Year @Model.PreviousQuarterData.PreviousQuarter.Q.ToString()
                            </label>
                            <input type="hidden" name="copyPrevious" value="false" />
                        </div>

                    </div>

                    <br />
                    <div>
                        <noscript>
                            <button class="govuk-button" type="submit">Copy</button>
                        </noscript>
                    </div>
                }
            }

            @using (Html.BeginRouteForm(AatfRedirect.SelectPcsRouteName, new { reselect = Model.Reselect }))
            {
                @Html.AntiForgeryToken()
                @Html.Gds().ValidationSummary()
                <h2 class="govuk-heading-m">These PCSs will be available to all of your AATFs</h2>
                <div class="govuk-checkboxes">
                    @for (var i = 0; i < Model.SchemeList.Count; i++)
                    {
                        <div class="govuk-checkboxes__item">
                            @{
                                var selectedOption = "";
                                if ((Model.Reselect || Model.CopyPrevious) && Model.SelectedSchemes != null)
                                {
                                    selectedOption = Model.SelectedSchemes.Count(p => p == Model.SchemeList[i].Id) > 0 ? "checked" : "";
                                }
                            }
                            <input type="checkbox" name="SelectedSchemes" value="@Model.SchemeList[i].Id" class="govuk-checkboxes__input" id="@Model.SchemeList[i].Id" @selectedOption />
                            <label class="govuk-label govuk-checkboxes__label" for="@Model.SchemeList[i].Id">
                                @Model.SchemeList[i].SchemeName - @Model.SchemeList[i].ApprovalName
                            </label>
                        </div>
                        @Html.HiddenFor(m => Model.SchemeList[i].ApprovalName)
                        @Html.HiddenFor(m => Model.SchemeList[i].Id)
                        @Html.HiddenFor(m => Model.SchemeList[i].OrganisationId)
                        @Html.HiddenFor(m => Model.SchemeList[i].Name)
                        @Html.HiddenFor(m => Model.SchemeList[i].CanEdit)
                        @Html.HiddenFor(m => Model.SchemeList[i].CompetentAuthorityId)
                        @Html.HiddenFor(m => Model.SchemeList[i].IbisCustomerReference)
                        @Html.HiddenFor(m => Model.SchemeList[i].ObligationType)
                        @Html.HiddenFor(m => Model.SchemeList[i].SchemeDataAvailability)
                        @Html.HiddenFor(m => Model.SchemeList[i].SchemeName)
                        @Html.HiddenFor(m => Model.SchemeList[i].SchemeStatus)
                        @Html.HiddenFor(m => Model.SchemeList[i].Selected)
                    }

                </div>
                <br>

                <p>
                     @Html.RouteLink("Clear selection", AatfRedirect.SelectPcsRouteName,  new { organisationId = Model.OrganisationId, returnId = Model.ReturnId, clearSelections = true }, new { @class = "govuk-button" })
                </p>

                @Html.HiddenFor(m => m.OrganisationId)
                @Html.HiddenFor(m => m.ReturnId)
                <button type="submit" class="govuk-button">
                    Save and continue
                </button>
            }
        </fieldset>
    </div>


    @if (!Model.Reselect)
    {
        @Html.RouteLink("Back", AatfRedirect.SelectReportOptionsRouteName, new { organisationId = Model.OrganisationId, returnId = Model.ReturnId }, new { @class = "govuk-back-link" });
    }
</section>