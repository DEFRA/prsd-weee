<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AATFApprovalNumber" xml:space="preserve">
    <value>AATF approval number</value>
  </data>
  <data name="AATFATFnameAndAddress" xml:space="preserve">
    <value>AATF / ATF name and address</value>
  </data>
  <data name="AATFNameAndAddress" xml:space="preserve">
    <value>AATF name and address</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>actions</value>
  </data>
  <data name="AddEditData" xml:space="preserve">
    <value>add / edit data</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ApprovalNumber" xml:space="preserve">
    <value>Approval number</value>
  </data>
  <data name="B2B" xml:space="preserve">
    <value>B2B (tonnes)</value>
  </data>
  <data name="B2C" xml:space="preserve">
    <value>B2C (tonnes)</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BreakDownByPcs" xml:space="preserve">
    <value>Breakdown by PCS</value>
  </data>
  <data name="CapitalisedActions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="ComplianceYearAndMonth" xml:space="preserve">
    <value>Compliance month and year</value>
  </data>
  <data name="EditDetails" xml:space="preserve">
    <value>Edit details</value>
  </data>
  <data name="EditTonnage" xml:space="preserve">
    <value>Edit tonnage</value>
  </data>
  <data name="KeptRetainedByDcf" xml:space="preserve">
    <value>Kept / retained by a DCF</value>
  </data>
  <data name="NonObligatedWeee" xml:space="preserve">
    <value>Non-obligated WEEE</value>
  </data>
  <data name="NothingToReport" xml:space="preserve">
    <value>Nothing to report</value>
  </data>
  <data name="NotSelectedForReporting" xml:space="preserve">
    <value>Not selected for reporting this quarter</value>
  </data>
  <data name="ObligatedWeee" xml:space="preserve">
    <value>Obligated WEEE</value>
  </data>
  <data name="OperatorNameAndAddress" xml:space="preserve">
    <value>Operator name and address</value>
  </data>
  <data name="PCSName" xml:space="preserve">
    <value>PCS name</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>Received</value>
  </data>
  <data name="ReceivedOnBehalfOfPcs" xml:space="preserve">
    <value>Received on behalf of PCS(s)</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveAATFATFConfirmTitle" xml:space="preserve">
    <value>Are you sure you want to remove this AATF / ATF from your list?</value>
  </data>
  <data name="RemoveAATFATFfromyourlist" xml:space="preserve">
    <value>Remove AATF / ATF from your list</value>
  </data>
  <data name="RemoveAATFATFMsg" xml:space="preserve">
    <value>Removing this AATF / ATF will delete all tonnage data associated with it</value>
  </data>
  <data name="ReportData" xml:space="preserve">
    <value>Report data</value>
  </data>
  <data name="ReportingOn" xml:space="preserve">
    <value>Reporting on</value>
  </data>
  <data name="ReusedAsWholeAppliance" xml:space="preserve">
    <value>Reused as a whole appliance</value>
  </data>
  <data name="SaveAndContinue" xml:space="preserve">
    <value>Save and continue</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SentToAnotherAatf" xml:space="preserve">
    <value>Sent to another AATF / ATF</value>
  </data>
  <data name="SiteName" xml:space="preserve">
    <value>Site name</value>
  </data>
  <data name="TotalTonnes" xml:space="preserve">
    <value>Total (tonnes)</value>
  </data>
  <data name="Typeofaddress" xml:space="preserve">
    <value>Type of address</value>
  </data>
  <data name="TotalWeeeReusedTableCaption" xml:space="preserve">
    <value>Total WEEE that has been reused</value>
  </data>
  <data name="WeeeReusedDescription" xml:space="preserve">
    <value>This is WEEE that has been refurbished or repaired to the point it is no longer waste</value>
  </data>
  <data name="WeeeReusedSitesTableCaption" xml:space="preserve">
    <value>WEEE that has been reused sites</value>
  </data>
  <data name="WEEESentB2B" xml:space="preserve">
    <value>WEEE sent B2B (tonnes)</value>
  </data>
  <data name="WEEESentB2C" xml:space="preserve">
    <value>WEEE sent B2C (tonnes)</value>
  </data>
  <data name="WEEESentOn" xml:space="preserve">
    <value>WEEE sent on</value>
  </data>
  <data name="AddAnAATF" xml:space="preserve">
    <value>Add an AATF</value>
  </data>
  <data name="AddAnATF" xml:space="preserve">
    <value>Add an ATF</value>
  </data>
  <data name="DifferenceAnAATFAndATF" xml:space="preserve">
    <value>What's the difference between an AATF and an ATF?</value>
  </data>
  <data name="SearchAnAATFByNameInfo" xml:space="preserve">
    <value>Search for the AATF by name, operator name or approval number</value>
  </data>
  <data name="SearchAnAATFHeading" xml:space="preserve">
    <value>Add the treatment facility where WEEE was sent to</value>
  </data>
  <data name="SearchAnAATFHeadingInfo" xml:space="preserve">
    <value>A treatment facility where WEEE was sent on to can be an AATF or an ATF (an ATF is an authorised treatment facility that is not approved to issue evidence).</value>
  </data>
  <data name="SearchAnAATFInfo" xml:space="preserve">
    <value>Use the search to find and add an AATF for this compliance year. If you are unsure if the treatment facility is an AATF or ATF, perform a search.</value>
  </data>
  <data name="SearchAnATFInfo" xml:space="preserve">
    <value>If you know the treatment facility is an ATF, use the link to add it. If you are unsure if the treatment facility is an ATF or an AATF, perform a search.</value>
  </data>
  <data name="CloseAllPcs" xml:space="preserve">
    <value>Close all breakdown by PCS</value>
  </data>
  <data name="OpenAllPcs" xml:space="preserve">
    <value>Open all breakdown by PCS</value>
  </data>
</root>