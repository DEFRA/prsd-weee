@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.AatfEvidence
@using EA.Weee.Core.Helpers
@using EA.Weee.Web.Areas.Scheme.ViewModels.ManageEvidenceNotes
@using EA.Weee.Web.RazorHelpers

@model EA.Weee.Web.Areas.Scheme.ViewModels.ManageEvidenceNotes.SchemeViewAndTransferManageEvidenceSchemeViewModel

@section full_main_content
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">

            @Html.Partial("~/Areas/Scheme/Views/ManageEvidenceNotes/_ManageEvidenceNotesHeader.cshtml", Model)

            @Html.Partial("~/Areas/Scheme/Views/ManageEvidenceNotes/_ManageEvidenceNotesTabs.cshtml", Model)

            <div class="govuk-tabs">

                <div class="govuk-tabs__panel" id="viewAndTransferEvidence">
                    <h2 class="govuk-heading-m govuk-!-padding-bottom-2">
                        View all reviewed evidence or transfer evidence
                    </h2>

                    @if (Model.DisplayTransferButton)
                    {
                        using (Html.BeginForm(actionName: "Transfer", controllerName: "ManageEvidenceNotes", method: FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.OrganisationId)
                            @Html.Hidden("complianceYear", Model.ManageEvidenceNoteViewModel.SelectedComplianceYear, new { id = "transfer-compliance-year" })
                            @(this.WeeeGds().Submit("Transfer evidence"))
                        }
                    }
                    else if (Model.CanSchemeManageEvidence && !Model.DisplayTransferButton)
                    {
                        <p>
                            You are unable to transfer evidence at the moment as you do not have any approved household evidence notes with available tonnages to transfer
                        </p>
                    }

                    @using (Html.BeginForm(actionName: "Index", controllerName: "ManageEvidenceNotes", method: FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("tab", Model.ActiveDisplayOption, new { id = "tab-hidden" })
                        @Html.Hidden("ManageEvidenceNoteViewModel.SelectedComplianceYear", Model.ManageEvidenceNoteViewModel.SelectedComplianceYear)

                <div class="govuk-panel-grey-background govuk-!-padding-bottom-0 govuk-!-margin-bottom-0">
                    <div class="govuk-grid-row govuk-!-padding-left-3">
                        <div class="govuk-grid-column-one-half govuk-!-padding-top-5">
                            @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "FilterViewModel")
                        </div>
                    </div>

                    <div class="govuk-grid-row govuk-!-padding-left-3">
                        <div class="govuk-grid-column-full">
                            <span class="govuk-label--s">
                                Filter by
                            </span>
                        </div>
                    </div>

                    <div class="govuk-grid-row govuk-!-padding-top-5 govuk-!-padding-left-3">
                        <div class="govuk-grid-column-one-half govuk-grid-column-one-half-from-desktop govuk-!-padding-left-0 govuk-!-padding-right-0 weee-evidence-padding-right">
                            @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "SubmittedDatesFiltersViewModel")
                        </div>
                        @*<div class="govuk-grid-column-one-quarter govuk-grid-column-one-quarter-from-desktop govuk-!-padding-left-0 govuk-!-padding-right-0 weee-evidence-padding-right">*@
                            @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "SubmittedByFiltersViewModel")
                        @*</div>*@
                    </div>

                    @if ((bool?)ViewData["ShowPbsFilters"] == false)
                    {
                        <div class="govuk-grid-row govuk-!-padding-top-5 govuk-!-padding-left-3">
                                @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "ObligationTypeFiltersViewModel")
                                @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "StatusFiltersViewModel")
                                @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "EvidenceNoteTypeFiltersViewModel")
                            <div class="govuk-grid-column-one-quarter govuk-grid-column-one-quarter-from-desktop  govuk-!-padding-top-6">
                                @Html.Partial("~/Views/Shared/_SearchFilterButtonsPartial.cshtml", Model.ManageEvidenceNoteViewModel,
                                 new ViewDataDictionary()
                                 {
                                    new KeyValuePair<string, object>("tab", EA.Weee.Core.Helpers.Extensions.ToDisplayString(ManageEvidenceNotesDisplayOptions.ViewAndTransferEvidence))
                                 })
                            </div>
                        </div>
                    }

                    @if ((bool?)ViewData["ShowPbsFilters"] == true)
                    {
                        <div class="govuk-grid-row govuk-!-padding-top-5 govuk-!-padding-left-3">
                            <div class="govuk-grid-column-three-quarters govuk-grid-column-three-quarters-from-desktop govuk-!-padding-left-0 govuk-!-padding-right-0 weee-evidence-padding-right">
                                @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "StatusFiltersViewModel")
                            </div>
                            <div class="govuk-grid-column-one-quarter govuk-grid-column-one-quarter-from-desktop govuk-!-padding-top-6">
                                @Html.Partial("~/Views/Shared/_SearchFilterButtonsPartial.cshtml", Model.ManageEvidenceNoteViewModel,
                                 new ViewDataDictionary()
                                 {
                                        new KeyValuePair<string, object>("tab", EA.Weee.Core.Helpers.Extensions.ToDisplayString(ManageEvidenceNotesDisplayOptions.ViewAndTransferEvidence))
                                 })
                            </div>
                        </div>
                    }
                </div>
                    }

                    <table id="reviewed-evidence-notes-table" class="govuk-table">
                        <caption class="govuk-table__caption govuk-visually-hidden">View all reviewed evidence or transfer to another PCS</caption>
                        <thead class="govuk-table__head">
                            <tr class="govuk-table__row">
                                <th class="govuk-table__header">
                                    Reference ID
                                </th>
                                <th class="govuk-table__header">
                                    Submitted date
                                </th>
                                <th class="govuk-table__header">
                                    Submitted by
                                </th>
                                <th class="govuk-table__header">
                                    Obligation type
                                </th>
                                <th class="govuk-table__header">
                                    Status
                                </th>
                                <th class="govuk-table__header">
                                    @Html.Gds().VisuallyHidden("actions")
                                </th>
                            </tr>
                        </thead>
                        <tbody class="govuk-table__body">
                            @if (Model.EvidenceNotesDataList.Any())
                            {
                                foreach (var note in Model.EvidenceNotesDataList)
                                {
                                    <tr class="govuk-table__row">
                                        <td class="govuk-table__cell">@note.ReferenceDisplay</td>
                                        <td class="govuk-table__cell">@(note.SubmittedDateDisplay)</td>
                                        <td class="govuk-table__cell">@note.SubmittedBy</td>
                                        @if (note.TypeOfWaste.HasValue)
                                        {
                                            <td class="govuk-table__cell">@(note.TypeOfWaste.Value.ToDisplayString()) </td>
                                        }
                                        else
                                        {
                                            <td class="govuk-table__cell"> </td>
                                        }
                                        <td class="govuk-table__cell">@note.Status</td>
                                        <td class="govuk-table__cell">
                                            @if (@note.Type == NoteType.Transfer)
                                            {
                                                @Html.NavigationRouteLink("View", "View transfer note " + @note.ReferenceDisplay, note.SchemeViewRouteName, new { pcsId = Model.OrganisationId, evidenceNoteId = @note.Id, selectedComplianceYear = Model.ManageEvidenceNoteViewModel.SelectedComplianceYear, redirectTab = ManageEvidenceNotesDisplayOptions.ViewAndTransferEvidence.ToDisplayString(), page = Model.EvidenceNotesDataList.PageNumber, queryString = EA.Weee.Web.Extensions.ReturnUrlHelper.TidyQueryString(@Context.Request.QueryString) }, null)

                                                if (note.DisplayEditLink)
                                                {
                                                    <br />
                                                    @Html.NavigationRouteLink("Edit", "Edit returned transfer note " + @note.ReferenceDisplay, "Scheme_edit_transfer", new { pcsId = Model.OrganisationId, evidenceNoteId = @note.Id, selectedComplianceYear = Model.ManageEvidenceNoteViewModel.SelectedComplianceYear, queryString = EA.Weee.Web.Extensions.ReturnUrlHelper.TidyQueryString(@Context.Request.QueryString) }, null)
                                                }
                                            }
                                            else
                                            {
                                                @Html.NavigationRouteLink("View", "View evidence note with reference ID " + @note.ReferenceDisplay, note.SchemeViewRouteName, new { pcsId = Model.OrganisationId, evidenceNoteId = @note.Id, selectedComplianceYear = Model.ManageEvidenceNoteViewModel.SelectedComplianceYear, redirectTab = ManageEvidenceNotesDisplayOptions.ViewAndTransferEvidence.ToDisplayString(), page = Model.EvidenceNotesDataList.PageNumber, queryString = EA.Weee.Web.Extensions.ReturnUrlHelper.TidyQueryString(@Context.Request.QueryString) }, null)
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5">
                                        @Html.Partial("~/Views/Shared/_NoResultsPartial.cshtml", Model, new ViewDataDictionary() { new KeyValuePair<string, object>("no-results-message", "<p>There are currently no evidence notes to view or transfer </p>") })
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="5">
                                        <p> Showing 0 - 0 of 0 </p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <br />
                    @{
                        Html.RenderPartial("~/Views/Shared/_EvidenceNotesPagerPartial.cshtml", Model.EvidenceNotesDataList,
                            new ViewDataDictionary() {
                                {
                                    "pagerRouteValues", new
                                    {
                                        tab = "view-and-transfer-evidence",
                                        selectedComplianceYear = Model.ManageEvidenceNoteViewModel.SelectedComplianceYear,
                                        startDate = Model.ManageEvidenceNoteViewModel.SubmittedDatesFilterViewModel.StartDate.HasValue ? Model.ManageEvidenceNoteViewModel.SubmittedDatesFilterViewModel.StartDate.Value.ToShortDateString() : null,
                                        endDate = Model.ManageEvidenceNoteViewModel.SubmittedDatesFilterViewModel.EndDate.HasValue ? Model.ManageEvidenceNoteViewModel.SubmittedDatesFilterViewModel.EndDate.Value.ToShortDateString() : null,
                                        receivedId = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.ReceivedId,
                                        wasteTypeValue = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.WasteTypeValue.HasValue ? Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.WasteTypeValue.Value.ToInt() : (int?)null,
                                        evidenceNoteTypeValue = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.EvidenceNoteTypeValue.HasValue ? Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.EvidenceNoteTypeValue.Value.ToInt() : (int?)null,
                                        noteStatusValue = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.NoteStatusValue.HasValue ? Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.NoteStatusValue.Value.ToInt() : (int?)null,
                                        submittedBy = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.SubmittedBy,
                                    }
                                }
});
                    }
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            initialiseTabs();
        });
    </script>
}