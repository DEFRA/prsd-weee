@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Web.Infrastructure
@using EA.Weee.Web.RazorHelpers
@model EA.Weee.Web.Areas.Scheme.ViewModels.ReviewTransferNoteViewModel
@{

}
@{
    ViewBag.Title = "Evidence note transfer - GOV.UK";
}

@section full_main_content
{
    @using (Html.BeginRouteForm(SchemeTransferEvidenceRedirect.ReviewSubmittedTransferEvidenceRouteName, FormMethod.Post))
    {
        if (!string.IsNullOrWhiteSpace(Model.QueryString))
        {
            @(this.WeeeGds().BackLink(
                string.Format("{0}?{1}", Url.Action("Index", "ManageEvidenceNotes", new { }), Model.QueryString)))
        }
        else
        {
            @(this.WeeeGds().BackLink(
                Url.Action("Index", "ManageEvidenceNotes",
                    new { @pcsId = Model.OrganisationId, @tab = Model.RedirectTabName, @selectedComplianceYear = Model.ViewTransferNoteViewModel.ComplianceYear, page = ViewBag.Page })))
        }
        

        @Html.AntiForgeryToken()

        @Html.HiddenFor(m => m.OrganisationId)
        @Html.HiddenFor(m => m.QueryString)
        @Html.HiddenFor(m => m.RedirectTabName)
        @Html.HiddenFor(m => m.ViewTransferNoteViewModel.ComplianceYear)
        @Html.HiddenFor(m => m.ViewTransferNoteViewModel.SchemeId)
        @Html.HiddenFor(m => m.ViewTransferNoteViewModel.EvidenceNoteId)
        @Html.HiddenFor(m => m.ViewTransferNoteViewModel.Reference)
        @Html.HiddenFor(m => m.ViewTransferNoteViewModel.Type)
        @Html.HiddenFor(m => m.ViewTransferNoteViewModel.Status, new { id = "status-id" })

        @Html.Gds().ValidationSummary()
        @Html.Partial("~/Areas/Scheme/Views/TransferEvidence/_ViewTransferEvidenceNotePartial.cshtml", Model.ViewTransferNoteViewModel)

        <div class="govuk-!-margin-top-7"></div>

        <p class="govuk-body">
            @Html.ActionLink("Download as PDF", "DownloadTransferEvidenceNote", "TransferEvidence", new { area = "Scheme", pcsId = Model.ViewTransferNoteViewModel.SchemeId, transferEvidenceNoteId = Model.ViewTransferNoteViewModel.EvidenceNoteId }, new { @class = "govuk-link" })
        </p>

        <!-- radiobuttons for approved only -->
        <p class="govuk-!-margin-top-7">Choose whether to approve, reject or return the evidence note transfer</p>
        <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.SelectedValue)" id="SelectedValue">
            @Html.Gds().ValidationMessageFor(m => m.SelectedValue)
            @this.WeeeGds().RadioButtonsFor(
                                    m => m.SelectedValue,
                                    Model.PossibleValues,
                                    "Choose whether to approve, reject or return the evidence note transfer",
                                    RadioButtonLegend.VisuallyHidden,
                                    RadioButtonLayout.Stacked,
                                    Model.HintItems)
        </div>

        <div class="govuk-form-group govuk-!-margin-bottom-7 @Html.Gds().FormGroupClass(m => m.Reason)" id="ReasonDiv">
            @Html.Gds().LabelFor(m => m.Reason, showOptionalLabel: false)
            @Html.Gds().ValidationMessageFor(m => m.Reason)
            @Html.TextAreaFor(m => m.Reason, htmlAttributes: new { @id = "Reason", @class = "govuk-textarea", @maxlength = "200", @title = "You can type up to 200 characters" })
        </div>

        <div class="govuk-form-group">
            @this.WeeeGds().Button("Save and continue")
        </div>
    }
}
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            initReviewEvidenceNote();
        });
    </script>
}
