@using EA.Weee.Web.RazorHelpers
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.DataStandards
@using EA.Weee.Web.ViewModels.Shared
@model EA.Weee.Web.Areas.Scheme.ViewModels.TransferEvidenceTonnageViewModel
@{
    var hideButton = false;
    if (ViewData["hideButton"] != null)
    {
        hideButton = (bool)ViewData["hideButton"];
    }
}

@using (Html.BeginForm(actionName: "TransferTonnage", controllerName: "TransferEvidence", method: FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.PcsId)

    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.TransferCategoryValues)">
        <label for="TransferCategoryValues" class="govuk-visually-hidden">hidden link for navigation to tonnage error</label> <input id="TransferCategoryValues" class="govuk-visually-hidden" />
        @Html.Gds().ValidationMessageFor(m => m.TransferCategoryValues)
    </div>

    var elementCount = 0;

    for (var i = 0; i < Model.EvidenceNotesDataList.Count; i++)
    {
        var note = Model.EvidenceNotesDataList.ElementAt(i);

        if (note.DisplayAatfName)
        {
            <h2 class="govuk-heading-m">@note.SubmittedBy (@note.AatfApprovalNumber)</h2>
        }

        <div class="govuk-panel-grey-background govuk-!-margin-bottom-5 govuk-!-padding-left-2 govuk-!-padding-right-2">


            <span class="govuk-label--s" id="reference-label-@i.ToString()">Reference ID&nbsp;</span><span class="govuk-body" aria-labelledby="reference-label-@i.ToString()">@note.ReferenceDisplay</span><br />
            <span class="govuk-label--s" id="received-label-@i.ToString()">WEEE received between&nbsp;</span><span class="govuk-body" aria-labelledby="received-label-@i.ToString()">@note.StartDate.Value.ToShortDateString() - @note.EndDate.Value.ToShortDateString()</span>

            <table id="transfer-notes-tonnage-@i.ToString()" class="govuk-table">
                <caption class="govuk-table__caption govuk-visually-hidden">Transfer tonnage for @note.SubmittedBy</caption>
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header govuk-!-text-align-left" style="width: 20%;">
                            Category
                        </th>
                        <th class="govuk-table__header govuk-!-text-align-right" style="width: 20%;">
                            Total received available (tonnes)
                        </th>
                        <th class="govuk-table__header govuk-!-text-align-right" style="width: 20%;">
                            Total reused available (tonnes)
                        </th>
                        <th class="govuk-table__header govuk-!-text-align-right" style="width: 20%;">
                            Transfer received (tonnes)
                        </th>
                        <th class="govuk-table__header govuk-!-text-align-right" style="width: 20%;">
                            Transfer reused (tonnes)
                        </th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">


                    @for (var j = 0; j < Model.EvidenceNotesDataList.ElementAt(i).CategoryValues.Count; j++)
                    {

                        var category = Model.EvidenceNotesDataList.ElementAt(i).CategoryValues.ElementAt(j);

                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">
                                @category.CategoryId. @category.CategoryDisplay

                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].CategoryId)
                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].CategoryDisplay)
                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].Id)
                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].TransferTonnageId)
                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].AvailableReused)
                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].AvailableReceived)

                            </td>
                            <td class="govuk-table__cell govuk-!-text-align-right">
                                @Model.TransferCategoryValues[elementCount].AvailableReceived
                            </td>
                            <td class="govuk-table__cell govuk-!-text-align-right">
                                @Model.TransferCategoryValues[elementCount].AvailableReused
                            </td>
                            <td class="govuk-table__cell govuk-!-text-align-right">
                                <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.TransferCategoryValues[elementCount],m => m.TransferCategoryValues[elementCount].Received)">
                                    <span class="govuk-visually-hidden" id="category-received-@category.CategoryId-@i.ToString()">Transfer received (tonnes) for @note.SubmittedBy and @category.CategoryDisplay</span>
                                    @Html.Gds().ValidationMessageFor(m => Model.TransferCategoryValues[elementCount].Received)
                                    @Html.TextBoxFor(m => Model.TransferCategoryValues[elementCount].Received,
                                        new { @class = "govuk-input tonnage-entry", data_received_category = @category.CategoryId, aria_labelledby = "category-received-" + @category.CategoryId + "-" + @i.ToString(), autocomplete = "off", maxlength = CommonMaxFieldLengths.Tonnage })
                                </div>
                            </td>
                            <td class="govuk-table__cell govuk-!-text-align-right">
                                <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.TransferCategoryValues[elementCount], m => m.TransferCategoryValues[elementCount].Reused))">
                                    <span class="govuk-visually-hidden" id="category-reused-@category.CategoryId-@i.ToString()">Transfer reused (tonnes) for @note.SubmittedBy and @category.CategoryDisplay</span>
                                    @Html.Gds().ValidationMessageFor(m => Model.TransferCategoryValues[elementCount].Reused)
                                    @Html.TextBoxFor(m => Model.TransferCategoryValues[elementCount].Reused,
                                        new { @class = "govuk-input tonnage-entry", data_reused_category = @category.CategoryId, aria_labelledby = "category-reused-" + @category.CategoryId + "-" + @i.ToString(), autocomplete = "off", maxlength = CommonMaxFieldLengths.Tonnage })
                                </div>
                            </td>
                        </tr>
                        elementCount++;
                    }

                </tbody>
            </table>
        </div>
    }

    <div class="govuk-!-padding-top-5"></div>

    <h2 class="govuk-heading-m govuk-!-padding-top-5 govuk-!-margin-bottom-2">Summary of total evidence to transfer</h2>
    <table id="transfer-tonnage-summary" class="govuk-table">
        <caption class="govuk-table__caption govuk-visually-hidden">Summary of total evidence to transfer</caption>
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th class="govuk-table__header govuk-!-text-align-left">
                    Category
                </th>
                <th class="govuk-table__header govuk-!-text-align-right">
                    Total to transfer(tonnes)
                </th>
                <th class="govuk-table__header govuk-!-text-align-right govuk-!-padding-right-2">
                    Total reused to transfer (tonnes)
                </th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">

            @for (var categoryCount = 0; categoryCount < Model.CategoryValues.Count; categoryCount++)
            {
                var item = categoryCount;

                @Html.Hidden("categoryid_to_calculate" + categoryCount, Model.CategoryValues.ElementAt(categoryCount).CategoryId)
                @Html.HiddenFor(m => m.CategoryValues[item].CategoryDisplay)
                var receivedId = "Received" + Model.CategoryValues.ElementAt(categoryCount).CategoryId + "Total";
                var reusedId = "Reused" + Model.CategoryValues.ElementAt(categoryCount).CategoryId + "Total";

                <tr class="govuk-table__row govuk-panel-grey-background">
                    <td class="govuk-table__cell govuk-!-padding-left-2">

                        @Model.CategoryValues[categoryCount].CategoryId. @Model.CategoryValues[categoryCount].CategoryDisplay
                    </td>

                    <td class="govuk-table__cell govuk-!-text-align-right" id="@receivedId">@Model.CategoryValues.ElementAt(categoryCount).TotalReceived</td>
                    <td class="govuk-table__cell govuk-!-text-align-right govuk-!-padding-right-2" id="@reusedId">@Model.CategoryValues.ElementAt(categoryCount).TotalReused</td>
                </tr>

            }
        </tbody>
    </table>
    if (!hideButton)
    {
        <div class="govuk-!-margin-top-3">
            <div class="govuk-button-group">

                @this.WeeeGds().Button("Submit transfer", new { name = "Action", value = ActionEnum.Submit, id = "submit-note", @class = "govuk-!-width-one-quarter" })
                @this.WeeeGds().Button(!Model.Edit ? "Save as draft" : "Save", new { id = "transfer-tonnage-button", name = "Action", value = ActionEnum.Save, @class = "govuk-!-width-one-quarter" }, secondaryButton: true)
                
            </div>
        </div>
    }
}
@Scripts.Render("~/bundles/weee_tonnage_totals")
<script type="text/javascript">
    initialiseTransferCategoryTotals();
</script>
