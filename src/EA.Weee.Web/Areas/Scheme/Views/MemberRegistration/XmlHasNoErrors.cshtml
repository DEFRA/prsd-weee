@using System.Globalization
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.Shared
@using EA.Weee.Web.Areas.Scheme.Controllers
@using EA.Weee.Web.RazorHelpers
@using MvcNavigationHelpers
@model EA.Weee.Web.Areas.Scheme.ViewModels.MemberUploadResultViewModel
@{
	ViewBag.Title = "View any warnings";
}

@section main_content {
	<header class="hgroup">
		<div>
		    <h1 class="govuk-heading-l">Your @Model.ComplianceYear member registration file has passed our validation checks</h1>
		</div>
	</header>
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		@Html.Gds().ValidationSummary()

		@Html.HiddenFor(m => m.TotalCharges)

		<p>Your XML file has passed our technical validation checks but it is your responsibility to ensure all of the information in your file is correct.</p>

		int numWarnings = Model.ErrorData.Count(e => e.ErrorLevel == ErrorLevel.Warning);
		string warningText = numWarnings > 1 ? "warnings" : "warning";

		if (@numWarnings > 0)
		{
			<p>
				Your XML file contains @numWarnings @warningText.
				Warnings are displayed when members details are changed or when your file contains an inconsistent value.
				You must review all warnings and make any necessary corrections to your file before it is ready to be submitted.
				Or, if you are happy with its content, you can submit your file with warnings.
			</p>
			<details>
				@{
					string warningSummaryText = string.Format("View {0} {1}", numWarnings, warningText);
					this.WeeeGds().SummaryExpansion(warningSummaryText, "warning-details-summary bold-small", "Member registration warnings", "View member registration warnings", "Validation sucessful");
				}
				<div class="warning-list-container">
					<ul>
						@foreach (var uploadError in Model.ErrorData)
						{
							if (uploadError.ErrorLevel == ErrorLevel.Warning)
							{
								<li class="warning-list-item font-xsmall">@uploadError.Description</li>
							}
						}
					</ul>
				</div>
			</details>
		}

	    <div class="highlight-section">
	        @if (Model.ComplianceYear.HasValue && Model.ComplianceYear.Value > 2018)
            {
                <div class="highlight-section-text">
                    The charge amount normally displayed here is being updated to account for changes brought about by the introduction of a charging scheme by the Environment Agency. 
                    These changes will affect charges for scheme members based in England and some non-UK based scheme members.
                </div>
            }
            else
            {
	            <div class="highlight-section-text">
	                Based on the information provided in your XML, your charges are:
	            </div>
	            <div class="highlight-section-amount">
	                @Model.TotalCharges.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
	            </div>
	        }
	    </div>

		<p>By submitting your XML, you are confirming that the information you’ve provided is accurate and complete.</p>

		@Html.Partial("_PrivacyPolicy");

		<div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.PrivacyPolicy)">
			@Html.Gds().ValidationMessageFor(m => m.PrivacyPolicy)
			<label class="block-label" for="PrivacyPolicy">
				@Html.CheckBoxFor(m => m.PrivacyPolicy, new { @id = "PrivacyPolicy" })
				Confirm you have read our privacy policy
			</label>
		</div>

		<p>
			@this.WeeeGds().SubmitWithEventTracking(
						"Submit",
						"Uploads",
						"XML submission",
						htmlAttributes: new Dictionary<string, object> { { "class", "button" } }
						)
		</p>

		<p>
		    Make changes and @(this.WeeeGds().ActionLinkWithEventTracking("upload a new file",
                             Url.UrlFor<MemberRegistrationController>(c => c.AddOrAmendMembers(Model.PcsId)),
                             "Member registration loop",
                             "Upload a new file",
                             "Validation successful")).
		</p>
	}
}
