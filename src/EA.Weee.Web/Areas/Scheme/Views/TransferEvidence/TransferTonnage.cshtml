
@using EA.Weee.Web.RazorHelpers
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.DataStandards
@using EA.Weee.Web.Areas.Scheme.ViewModels
@model EA.Weee.Web.Areas.Scheme.ViewModels.TransferEvidenceTonnageViewModel
@{
    ViewBag.Title = "Transfer tonnage - GOV.UK";
}

@section full_main_content
{
    @Html.Gds().ValidationSummary()
    <h1 class="govuk-heading-l">
        Transfer tonnage to @Model.RecipientName from selected evidence notes
    </h1>
    <p class="govuk-body">Choose the tonnage that you would like to transfer from each category, for each evidence note that you have selected</p>

    @using (Html.BeginForm(actionName: "TransferTonnage", controllerName: "TransferEvidence", method: FormMethod.Get, htmlAttributes: new Dictionary<string, object>() { { "id", "TransferEvidenceForm" } }))
    {
        @Html.Hidden("action", true)
        @Html.Gds().CheckBoxFrontEndFor(m => m.TransferAllTonnage, new { @id = "transferAllTonnage", @class = "govuk-checkboxes__input" })

        <noscript>
            <div class="govuk-!-margin-top-3">
                <div class="govuk-button-group">
                    @this.WeeeGds().Button("Copy tonnage", new { name = "action", value = TransferEvidenceTonnageViewModel.ActionEnum.Copy, id = "copy-tonnage-button", @class = "govuk-!-width-one-quarter" })
                </div>
            </div>
        </noscript>
    }

    @using (Html.BeginForm(actionName: "TransferTonnage", controllerName: "TransferEvidence", method: FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(m => m.PcsId)

        <div class="govuk-!-padding-bottom-5"></div>

        var elementCount = 0;

        for (var i = 0; i < Model.EvidenceNotesDataList.Count; i++)
        {
            <div class="govuk-panel-grey-background govuk-!-margin-bottom-5 govuk-!-padding-left-2 govuk-!-padding-right-2">
                @{
                    var note = Model.EvidenceNotesDataList.ElementAt(i);
                }

                @if (note.DisplayAatfName)
                {
                    <h2 class="govuk-heading-m">@note.SubmittedBy (@note.AatfApprovalNumber)</h2>
                }

                <span class="govuk-label--s" id="reference-label-@i.ToString()">Reference&nbsp;</span><span class="govuk-body" aria-labelledby="reference-label-@i.ToString()">@note.ReferenceDisplay</span><br/>
                <span class="govuk-label--s" id="received-label-@i.ToString()">WEEE received between&nbsp;</span><span class="govuk-body" aria-labelledby="received-label-@i.ToString()">@note.StartDate.ToShortDateString() - @note.EndDate.ToShortDateString()</span>

                <table id="transfer-notes-tonnage-@i.ToString()" class="govuk-table">
                    <caption class="govuk-table__caption govuk-visually-hidden">Transfer tonnage for @note.SubmittedBy</caption>
                    <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header govuk-!-text-align-left" style="width: 20%;">
                            Category
                        </th>
                        <th class="govuk-table__header govuk-!-text-align-right" style="width: 20%;">
                            Total received available (tonnes)
                        </th>
                        <th class="govuk-table__header govuk-!-text-align-right" style="width: 20%;">
                            Total reused available (tonnes)
                        </th>
                        <th class="govuk-table__header govuk-!-text-align-right" style="width: 20%;">
                            Transfer received (tonnes)
                        </th>
                        <th class="govuk-table__header govuk-!-text-align-right" style="width: 20%;">
                            Transfer reused (tonnes)
                        </th>
                    </tr>
                    </thead>
                    <tbody class="govuk-table__body">

                    @for (var j = 0; j < Model.EvidenceNotesDataList.ElementAt(i).CategoryValues.Count; j++)
                    {

                        var category = Model.EvidenceNotesDataList.ElementAt(i).CategoryValues.ElementAt(j);

                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">
                                @category.CategoryId. @category.CategoryDisplay

                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].CategoryId)
                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].CategoryDisplay)
                                @Html.HiddenFor(m => Model.TransferCategoryValues[elementCount].Id)

                            </td>
                            <td class="govuk-table__cell govuk-!-text-align-right">
                                @category.Received
                            </td>
                            <td class="govuk-table__cell govuk-!-text-align-right">
                                @category.Reused
                            </td>
                            <td class="govuk-table__cell govuk-!-text-align-right">
                                <div class="govuk-form-group @Html.Gds().FormGroupClass(m => Model.TransferCategoryValues[elementCount], m => Model.TransferCategoryValues[elementCount].Received)">
                                    <span class="govuk-visually-hidden" id="category-received-@category.CategoryId-@i.ToString()">Transfer received (tonnes) for @note.SubmittedBy and @category.CategoryDisplay</span>
                                    @Html.Gds().ValidationMessageFor(m => Model.TransferCategoryValues[elementCount].Received)
                                    @Html.TextBoxFor(m => Model.TransferCategoryValues[elementCount].Received,
                                        new { id = "Received" + @category.CategoryId, @class = "govuk-input tonnage-entry", aria_labelledby = "category-received-" + @category.CategoryId + "-" + @i.ToString(), autocomplete = "off", maxlength = CommonMaxFieldLengths.Tonnage })
                                </div>
                            </td>
                            <td class="govuk-table__cell govuk-!-text-align-right">
                                <div class="govuk-form-group @Html.Gds().FormGroupClass(m => Model.TransferCategoryValues[elementCount], m => Model.TransferCategoryValues[elementCount].Reused)">
                                    <span class="govuk-visually-hidden" id="category-reused-@category.CategoryId-@i.ToString()">Transfer reused (tonnes) for @note.SubmittedBy and @category.CategoryDisplay</span>
                                    @Html.Gds().ValidationMessageFor(m => Model.TransferCategoryValues[elementCount].Reused)
                                    @Html.TextBoxFor(m => Model.TransferCategoryValues[elementCount].Reused, 
                                        new { id = "Reused" + @category.CategoryId, @class = "govuk-input tonnage-entry", aria_labelledby = "category-reused-" + @category.CategoryId + "-" + @i.ToString(), autocomplete = "off", maxlength = CommonMaxFieldLengths.Tonnage })
                                </div>
                            </td>
                        </tr>
                        elementCount++;
                    }

                    </tbody>
                </table>
            </div>
        }

        <h2 class="govuk-heading-m">Summary of total evidence to transfer</h2>
        <div class="govuk-!-margin-top-3">
            <div class="govuk-button-group">
                @this.WeeeGds().Button("Continue", new { name = "action", value = TransferEvidenceTonnageViewModel.ActionEnum.Save, id = "transfer-tonnage-button", @class = "govuk-!-width-one-quarter" })
            </div>
        </div>

        <table id="transfer-tonnage-summary" class="govuk-table">
            <caption class="govuk-table__caption govuk-visually-hidden">Summary of total evidence to transfer</caption>
            <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th class="govuk-table__header govuk-!-text-align-left">
                    Category
                </th>
                <th class="govuk-table__header govuk-!-text-align-right">
                    Total to transfer(tonnes)
                </th>
                <th class="govuk-table__header govuk-!-text-align-right">
                    Total reused to transfer (tonnes)
                </th>
            </tr>
            </thead>
            <tbody class="govuk-table__body">

            @for (var categoryCount = 0; categoryCount < Model.CategoryValues.Count; categoryCount++)
            {
                var item = categoryCount;

                @Html.HiddenFor(m => m.CategoryValues[item].CategoryId)
                @Html.HiddenFor(m => m.CategoryValues[item].CategoryDisplay)
                var receivedId = "Received" + Model.CategoryValues.ElementAt(categoryCount).CategoryId + "Total";
                var reusedId = "Reused" + Model.CategoryValues.ElementAt(categoryCount).CategoryId + "Total";

                <tr class="govuk-table__row govuk-panel-grey-background">
                    <td class="govuk-table__cell">

                        @Model.CategoryValues[categoryCount].CategoryId. @Model.CategoryValues[categoryCount].CategoryDisplay
                    </td>
                    
                    <td class="govuk-table__cell govuk-!-text-align-right" id="@receivedId"></td>
                    <td class="govuk-table__cell govuk-!-text-align-right" id="@reusedId"></td>
                </tr>

            }
            </tbody>
        </table>


    }
    @Scripts.Render("~/bundles/weee_tonnage_totals")
    @for (var categoryCount = 0; categoryCount < Model.CategoryValues.Count; categoryCount++)
    {

        var category = Model.CategoryValues.ElementAt(categoryCount);

<script>
            var scriptReceivedId = 'Received' + '@category.CategoryId.ToString()';
            var scriptReusedId = 'Reused' + '@category.CategoryId.ToString()';
            TonnageTotals(scriptReceivedId);
    TonnageTotals(scriptReusedId);
</script>


    }
}

