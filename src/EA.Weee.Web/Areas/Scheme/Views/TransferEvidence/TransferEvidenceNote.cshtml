@using EA.Weee.Web.RazorHelpers
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using MvcNavigationHelpers
@using EA.Weee.Web.Areas.Scheme.Controllers
@using EA.Weee.Web.Areas.Scheme.ViewModels.ManageEvidenceNotes

@model EA.Weee.Web.Areas.Scheme.ViewModels.TransferEvidenceNoteCategoriesViewModel

@{
    ViewBag.Title = "Transfer evidence - GOV.UK";
}

@section full_main_content
{
    @(this.WeeeGds().BackLink(@Url.UrlFor<ManageEvidenceNotesController>(a => a.Index(Model.OrganisationId, ManageEvidenceNotesDisplayOptions.ViewAndTransferEvidence))))

    <h1 class="govuk-heading-l">
        Transfer evidence to another scheme
    </h1>

    @using (Html.BeginForm(actionName: "TransferEvidenceNote", controllerName: "TransferEvidence", method: FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.OrganisationId)
        @Html.Gds().ValidationSummary()

        <div class="govuk-form-group govuk-!-width-one-half @Html.Gds().FormGroupClass(m => m.SelectedSchema)">
            @Html.Gds().LabelFor(m => m.SelectedSchema, new { @class = "govuk-label--m" })
            @Html.Gds().ValidationMessageFor(m => m.SelectedSchema)
            @Html.Gds().DropDownListFor(m => m.SelectedSchema, new SelectList(Model.SchemasToDisplay, "Id", "SchemeName"), string.Empty, new { @class = "govuk-!-width-one-quarter", autocomplete = "false" }, useHalfWidth: false, withLookAhead: true)
        </div>

        <div class="govuk-!-padding-top-5 govuk-form-group @Html.Gds().FormGroupClass(m => m.HasSelectedAtLeastOneCategory)">
            @Html.Gds().LabelFor(m => m.HasSelectedAtLeastOneCategory, new { @class = "govuk-label--m" })
            @Html.Gds().ValidationMessageFor(m => m.HasSelectedAtLeastOneCategory)
            <div class="govuk-!-padding-top-5"></div>
            @for (var i = 0; i < Model.CategoryValues.Count; i++)
            {

                @Html.HiddenFor(m => m.HasSelectedAtLeastOneCategory, new { id = i + "_HasSelectedAtLeastOneCategory" })

                <div>
                    <div class='govuk-checkboxes'>
                        <div class='govuk-checkboxes__item'>
                            @{
                                var category = Model.CategoryValues[i];
                                var selectedOption = Model.CategoryValues[i].Selected ? "checked" : "";
                                var id = "CategoryValues_" + i + "__Selected";
                                var name = "CategoryValues[" + i + "].Selected";
                            }

                            <input class="govuk-checkboxes__input" id=@id name=@name type="checkbox" value="true" @selectedOption/>
                            <label class="govuk-label&#32;govuk-checkboxes__label" for="@id">
                                @category.CategoryId. @category.CategoryDisplay
                            </label>
                            <input name="@name" type="hidden" value="false">
                        </div>
                    </div>
                    <br/>
                </div>
                @Html.HiddenFor(m => m.CategoryValues[i].CategoryId)
            }
        </div>

        <div class="govuk-!-margin-top-3">
            <div class="govuk-button-group">
                @this.WeeeGds().Button("Continue", new { id = "transfer-continue-btn", @class = "govuk-!-width-one-quarter" })
            </div>
        </div>
    }
}
