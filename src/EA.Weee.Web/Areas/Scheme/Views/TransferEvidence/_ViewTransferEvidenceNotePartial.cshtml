@using EA.Weee.Core.Helpers
@using EA.Weee.Core.AatfEvidence
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Web.RazorHelpers
@using EA.Weee.Web.ViewModels.Shared
@model EA.Weee.Web.ViewModels.Shared.ViewTransferNoteViewModel

<h1 class="govuk-heading-l">Evidence note transfer</h1>

<div class="govuk-width-container govuk-!-margin-top-3">

    <div class="govuk-grid-row govuk-!-width-one-full govuk-full-printable-width govuk-!-margin-bottom-1">
        @Html.Gds().DisplayFor(m => m.ReferenceDisplay, Model.ReferenceDisplay, "govuk-grid-column-one-quarter")
    </div>

    <div class="govuk-grid-row govuk-!-margin-bottom-1 govuk-full-printable-width">
        @Html.Gds().DisplayFor(m => m.Status, Model.Status.ToDisplayString(), "govuk-grid-column-one-quarter")
    </div>

    <div class="govuk-grid-row govuk-!-width-one-full govuk-!-margin-bottom-1 govuk-full-printable-width printable-word-break ">
        @Html.Partial("_DisplayRejectedReasonPartial", Model, new ViewDataDictionary() { { "widthCss", "govuk-grid-column-one-quarter" } })
    </div>

    <div class="govuk-grid-row govuk-!-width-one-full govuk-!-margin-bottom-1 govuk-full-printable-width printable-word-break ">
        @Html.Partial("_DisplayReturnedReasonPartial", Model, new ViewDataDictionary() { { "widthCss", "govuk-grid-column-one-quarter" } })
    </div>

    <div class="govuk-grid-row govuk-!-width-one-full govuk-!-margin-bottom-1 govuk-full-printable-width printable-word-break ">
        @Html.Partial("_DisplayVoidedReasonPartial", Model, new ViewDataDictionary() { { "widthCss", "govuk-grid-column-one-quarter" } })
    </div>

    @if (Model.HasSubmittedDate)
    {
        <div class="govuk-grid-row govuk-!-margin-bottom-1 govuk-full-printable-width">
            @Html.Gds().DisplayFor(m => m.SubmittedDate, Model.SubmittedDate, "govuk-grid-column-one-quarter")
        </div>
    }

    @if (Model.HasApprovedDate)
    {
        <div class="govuk-grid-row govuk-!-margin-bottom-1 govuk-full-printable-width">
            @Html.Gds().DisplayFor(m => m.ApprovedDate, Model.ApprovedDate, "govuk-grid-column-one-quarter")
        </div>
    }

    @if (Model.HasRejectedDate)
    {
        <div class="govuk-grid-row govuk-!-margin-bottom-1 govuk-full-printable-width">
            @Html.Gds().DisplayFor(m => m.RejectedDate, Model.RejectedDate, "govuk-grid-column-one-quarter")
        </div>
    }

    @if (Model.HasBeenReturned)
    {
        <div class="govuk-grid-row govuk-!-margin-bottom-1 govuk-full-printable-width">
            @Html.Gds().DisplayFor(m => m.ReturnedDate, Model.ReturnedDate, "govuk-grid-column-one-quarter")
        </div>
    }

    @if (Model.HasBeenVoided)
    {
        <div class="govuk-grid-row govuk-!-margin-bottom-1 govuk-full-printable-width">
            @Html.Gds().DisplayFor(m => m.VoidedDate, Model.VoidedDate, "govuk-grid-column-one-quarter")
        </div>
    }

    <div class="govuk-grid-row govuk-!-margin-bottom-1 govuk-full-printable-width">
        @Html.Gds().DisplayFor(m => m.ComplianceYearDisplay, Model.ComplianceYearDisplay, "govuk-grid-column-one-quarter")
    </div>
</div>

@if (Model.EditMode)
{
    <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
}

<!-- screen 6.07a -->
@if (Model.Status.Equals(NoteStatus.Approved) && Model.CanVoid)
{
    using (Html.BeginForm("VoidTransferNote", "ManageEvidenceNotes", FormMethod.Get))
    {
        @Html.Hidden("transferEvidenceNoteId", Model.EvidenceNoteId);
        @(this.WeeeGds().Submit("Void evidence note transfer", new { id = "voidTransferNoteButton", @class = "govuk-button", style = "margin-top: 20px" }, false))
    }
}
<!-- screen 6.07a -->


    <div class="govuk-width-container govuk-!-padding-top-3 govuk-!-padding-left-0 printable-padding-top-3">

        <div class="govuk-grid-column-one-third govuk-!-padding-left-0">
            <span id="site" class="govuk-label--s">Transferred by</span><br />
            <p aria-labelledby="site" class="govuk-body weee-word-break"> @Html.Raw(Model.TransferredByAddress)</p>
        </div>
        <div class="govuk-grid-column-one-third govuk-!-padding-left-0">
            <span id="recipient" class="govuk-label--s">Recipient</span><br />
            <p aria-labelledby="recipient" class="govuk-body weee-word-break"> @Html.Raw(Model.RecipientAddress)</p>
        </div>

        @if (Model.EditMode && !Model.HasBeenReturned)
        {
        <div class="govuk-grid-column-one-third govuk-body govuk-!-font-size-19" style="text-align:right; padding-right:0">
            @Html.NavigationRouteLink("Edit recipient and categories", "Edit recipient and categories for transfer note " + Model.Reference, "Scheme_edit_transfer_categories", new { pcsId = Model.SchemeId, evidenceNoteId = Model.EvidenceNoteId }, null)<br />
        </div>
        }
        else
        {
        <div class="govuk-grid-column-one-third">&nbsp;</div>
        }
    </div>
<div class="ui-helper-clearfix"></div>
@{
    var transferredTitle = "Total transferred (tonnes)";
}
@if (Model.EditMode && Model.HasBeenReturned)
{
    <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
    <div class="govuk-grid-column-one-third govuk-!-padding-left-0 govuk-!-padding-top-5">
        <h2 class="govuk-heading-m govuk-!-margin-bottom-2">@transferredTitle</h2>
    </div>
    <div class="govuk-grid-column-two-thirds govuk-body govuk-!-font-size-19 govuk-!-padding-top-5  govuk-!-text-align-right govuk-!-padding-right-0">
        @Html.NavigationRouteLink("Edit categories", "Edit categories for transfer note" + Model.Reference, "Scheme_edit_transfer_categories", new { pcsId = Model.SchemeId, evidenceNoteId = Model.EvidenceNoteId }, null)<br />
    </div>
}
else
{
    <h2 class="govuk-heading-m govuk-!-padding-top-5 govuk-!-margin-bottom-2">@transferredTitle</h2>
}

<table id="transfer-note-tonnage-summary" class="govuk-table">
    <caption class="govuk-table__caption govuk-visually-hidden">Summary of total evidence transferred</caption>
    <thead class="govuk-table__head">
        <tr class="govuk-table__row">
            <th class="govuk-table__header govuk-!-text-align-left" style="width: 35%">
                Category
            </th>
            <th class="govuk-table__header govuk-!-text-align-left printable-text-align-right" style="width: 32.5%">
                Total transferred (tonnes)
            </th>
            <th class="govuk-table__header govuk-!-text-align-left govuk-!-padding-right-2 printable-text-align-right" style="width: 32.5%">
                Total reuse transferred (tonnes)
            </th>
        </tr>
    </thead>
    <tbody class="govuk-table__body">

        @for (var categoryCount = 0; categoryCount < Model.TotalCategoryValues.Count; categoryCount++)
        {
            var item = categoryCount;

            <tr class="govuk-table__row govuk-panel-grey-background">
                <td class="govuk-table__cell govuk-!-padding-left-2">
                    @Model.TotalCategoryValues[categoryCount].CategoryId. @Model.TotalCategoryValues[categoryCount].CategoryDisplay
                </td>
                <td class="govuk-table__cell govuk-!-text-align-right printable-text-align-right">@Model.TotalCategoryValues[categoryCount].TotalReceived</td>
                <td class="govuk-table__cell govuk-!-text-align-right govuk-!-padding-right-2 printable-text-align-right">@Model.TotalCategoryValues[categoryCount].TotalReused</td>
            </tr>
        }
    </tbody>
</table>

@if (Model.EditMode)
{
    <hr class="govuk-!-padding-top-5 govuk-section-break govuk-section-break--l govuk-section-break--visible">
}

<div class="govuk-table govuk-!-margin-bottom-0 govuk-!-padding-top-5">
    <div class="govuk-grid-column-one-half govuk-!-margin-left-0 govuk-!-padding-left-0 govuk-!-margin-bottom-0">

        <h2 class="govuk-heading-m govuk-!-padding-left-0 govuk-!-margin-left-0" style="text-align: left;">Breakdown of evidence transferred</h2>
    </div>

    @if (Model.EditMode)
    {
    <div class="govuk-grid-column-one-half govuk-body govuk-!-font-size-19" style="text-align:right; padding-right:0">
        @Html.NavigationRouteLink("Edit tonnages", "Edit tonnages for transfer note" + Model.Reference, "Scheme_edit_transfer_tonnages", new { pcsId = Model.SchemeId, evidenceNoteId = Model.EvidenceNoteId }, null)<br />
    </div>
    }
    else
    {
    <div class="govuk-grid-column-one-half govuk-printable-half-column">&nbsp;</div>
    }
</div>

<div class="ui-helper-clearfix"></div>

@for (var aatfCount = 0; aatfCount < Model.Summary.Count; aatfCount++)
{
    var aatf = Model.Summary.ElementAt(aatfCount);

    <div class="govuk-table govuk-!-margin-bottom-0">
        <div class="govuk-grid-column-full govuk-!-margin-left-0 govuk-!-padding-left-0">
            <h3 class="govuk-heading-s govuk-!-padding-top-0">@string.Format("Original AATF: {0} ({1})", aatf.AatfName, aatf.AatfApprovalNumber)</h3>
        </div>
    </div>

    <table id="transfer-notes-tonnage-@aatfCount.ToString()" class="govuk-table">
        <caption class="govuk-table__caption govuk-visually-hidden">Transfer tonnages for @aatf.AatfName</caption>
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th class="govuk-table__header govuk-!-text-align-left" style="width: 15%;">
                    Reference ID
                </th>
                <th class="govuk-table__header govuk-!-text-align-left" style="width: 40%;">
                    Category
                </th>
                <th class="govuk-table__header govuk-!-text-align-left govuk-!-padding-right-0 govuk-!-padding-left-7 govuk-printable-aatf-transferred" style="width: 22.5%;">
                    Total transferred (tonnes)
                </th>
                <th class="govuk-table__header govuk-!-text-align-left govuk-!-padding-right-0" style="width: 22.5%;">
                    Total reuse transferred (tonnes)
                </th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">
        @for (var noteCount = 0; noteCount < aatf.Notes.Count; noteCount++)
        {
            var note = aatf.Notes.ElementAt(noteCount);
               
            for (var categoryCount = 0; categoryCount < note.CategoryValues.Count; categoryCount++)
            {
                var category = note.CategoryValues.ElementAt(categoryCount);

                <tr class="govuk-table__row">
                    @if (categoryCount == 0)
                    {
                        <td class="govuk-table__cell govuk-table__cell-top-align" rowspan="@(note.CategoryValues.Count)">
                            @note.ReferenceDisplay
                        </td>
                    }

                    <td class="govuk-table__cell govuk-!-text-align-left">
                        @string.Format("{0}. {1}", category.CategoryId, category.CategoryDisplay)
                    </td>
                    <td class="govuk-table__cell govuk-!-text-align-right printable-text-align-right govuk-!-padding-right-3">
                        @category.Received
                    </td>
                    <td class="govuk-table__cell govuk-!-text-align-right printable-text-align-right govuk-!-padding-right-1">
                        @category.Reused
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
}
