@using EA.Weee.Core.Helpers
@using EA.Weee.Core.AatfEvidence
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Web.RazorHelpers
@model EA.Weee.Web.ViewModels.Shared.ViewTransferNoteViewModel


<style>

    .summary-category-column {
        width: 40%;
    }

    .summary-tonnage-column {
        width: 30%;
    }

    .printable-tonnage-column-padding {
        padding-right: 10px;
    }

    .breakdown-reference-column {
        width: 15%;
    }

    .breakdown-category-column {
        width: 40%;
    }

    .breakdown-tonnage-column {
        width: 22.5%;
    }

    .govuk-summary-list__row {
        border-bottom: none !important;
    }

    .govuk-summary-list__key {
        margin-bottom: 0px !important;
    }

    .govuk-summary-list__value, .govuk-summary-list__key {
        padding-top: 3px !important;
        padding-bottom: 3px !important;
    }
</style>


<h1 class="govuk-heading-l">Evidence note transfer</h1>

<div class="govuk-!-margin-top-3">

    <dl class="govuk-summary-list">
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                @Html.DisplayNameFor(m => m.ReferenceDisplay)
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.ReferenceDisplay
            </dd>
        </div>
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                @Html.DisplayNameFor(m => m.Status)
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.Status
            </dd>
        </div>

        @if (Model.DisplayRejectedReason)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.RejectedReason)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.RejectedReason)
                </dd>
            </div>
        }

        @if (Model.DisplayReturnedReason)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.ReturnedReason)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.ReturnedReason)
                </dd>
            </div>
        }

        @if (Model.HasVoidReason)
        {
            if (Model.DisplayVoidedReason)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        @Html.DisplayNameFor(m => m.VoidedReason)
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Html.DisplayTextFor(m => m.VoidedReason)
                    </dd>
                </div>
            }
        }

        @if (Model.DisplayCancelledReason)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.CancelledReason)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.CancelledReason)
                </dd>
            </div>
        }

        @if (Model.HasSubmittedDate)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.SubmittedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.SubmittedDate
                </dd>
            </div>
        }

        @if (Model.HasApprovedDate)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.ApprovedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.ApprovedDate
                </dd>
            </div>
        }

        @if (Model.HasRejectedDate)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.RejectedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.RejectedDate
                </dd>
            </div>

        }

        @if (Model.HasBeenReturned)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.ReturnedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.ReturnedDate
                </dd>
            </div>

        }

        @if (Model.HasBeenVoided)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.VoidedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.VoidedDate
                </dd>
            </div>
        }

        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                @Html.DisplayNameFor(m => m.ComplianceYearDisplay)
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.ComplianceYearDisplay
            </dd>
        </div>
    </dl>
</div>

<!-- screen 6.07a -->
@if (Model.Status.Equals(NoteStatus.Approved) && Model.CanVoid)
{
    using (Html.BeginForm("VoidTransferNote", "ManageEvidenceNotes", FormMethod.Get))
    {
        @Html.Hidden("transferEvidenceNoteId", Model.EvidenceNoteId);
        @(this.WeeeGds().Submit("Void evidence note transfer", new { id = "voidTransferNoteButton", @class = "govuk-button", style = "margin-top: 20px" }, false))
    }
}

<!-- screen 6.07a -->
<div class="govuk-full-printable-width govuk-!-padding-top-3 govuk-!-padding-left-0 printable-padding-top-3">
    <table class="govuk-table prsd-table-small-collapse aatf-task-list-table">
        <thead class="govuk-table__head prsd-table-small-collapse prsd-table-small-collapse-header">
            <tr class="govuk-table__row govuk-table__cell--thick prsd-table-small-collapse prsd-table-small-collapse-header">
                <th class="govuk-table__header prsd-table-small-collapse" scope="col" width="50%">Transferred by</th>
                <th class="govuk-table__header prsd-table-small-collapse" scope="col" width="50%">Recipient</th>
            </tr>
        </thead>
        <tbody class="govuk-table__body prsd-table-small-collapse">
            <tr class="govuk-table__row govuk-table__cell--thick prsd-table-small-collapse">
                <td data-label="Site" class="govuk-table__cell prsd-table-small-collapse prsd-table-small-collapse-cell">
                    <span class="prsd-long-address">
                        @Html.Raw(Model.TransferredByAddress)
                    </span>
                </td>
                <td data-label="Operator" class="govuk-table__cell prsd-table-small-collapse prsd-table-small-collapse-cell">
                    <span class="prsd-long-address">
                        @Html.Raw(Model.RecipientAddress)
                    </span>
                </td>
            </tr>
        </tbody>
    </table>

    @if (Model.EditMode && !Model.HasBeenReturned)
    {
        <div class="govuk-grid-column-one-third govuk-body govuk-!-font-size-19" style="text-align:right; padding-right:0">
            @Html.NavigationRouteLink("Edit recipient and categories", "Edit recipient and categories for transfer note " + Model.Reference, "Scheme_edit_transfer_categories", new { pcsId = Model.SchemeId, evidenceNoteId = Model.EvidenceNoteId }, null)<br />
        </div>
    }
    else
    {
        <div class="govuk-grid-column-one-third">&nbsp;</div>
    }
</div>
<div class="ui-helper-clearfix"></div>
@{
    var transferredTitle = "Total transferred (tonnes)";
}
@if (Model.EditMode && Model.HasBeenReturned)
{
    <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
    <div class="govuk-grid-column-one-third govuk-!-padding-left-0 govuk-!-padding-top-5">
        <h2 class="govuk-heading-m govuk-!-margin-bottom-2">@transferredTitle</h2>
    </div>
    <div class="govuk-grid-column-two-thirds govuk-body govuk-!-font-size-19 govuk-!-padding-top-5  govuk-!-text-align-right govuk-!-padding-right-0">
        @Html.NavigationRouteLink("Edit categories", "Edit categories for transfer note" + Model.Reference, "Scheme_edit_transfer_categories", new { pcsId = Model.SchemeId, evidenceNoteId = Model.EvidenceNoteId }, null)<br />
    </div>
}
else
{
    <h2 class="govuk-heading-m govuk-!-padding-top-5 govuk-!-margin-bottom-2">@transferredTitle</h2>
}

<table id="transfer-note-tonnage-summary" class="govuk-table">
    @{
        var summaryCategoryWidthCss = string.Empty;
        var summaryTonnageWidthCss = string.Empty;
        var printableTonnageColumnPadding = string.Empty;

        if (Model.IsPrintable)
        {
            <colgroup>
                <col style="width: 45%; max-width: 45%;" />
                <col style="width: 27.5%; max-width: 27.5%;" />
                <col style="width: 27.5%; max-width: 27.5%;" />
            </colgroup>

            printableTonnageColumnPadding = "printable-tonnage-column-padding";
        }
        else
        {
            summaryCategoryWidthCss = "summary-category-column";
            summaryTonnageWidthCss = "summary-tonnage-column";
        }
    }

    <caption class="govuk-table__caption govuk-visually-hidden">Summary of total evidence transferred</caption>
    <thead class="govuk-table__head">
        <tr class="govuk-table__row">
            <th class="govuk-table__header govuk-!-text-align-left @summaryCategoryWidthCss">
                Category
            </th>
            <th class="govuk-table__header govuk-table__header--numeric @summaryTonnageWidthCss @printableTonnageColumnPadding">
                Total transferred (tonnes)
            </th>
            <th class="govuk-table__header govuk-table__header--numeric govuk-!-padding-right-1 @summaryTonnageWidthCss">
                Total reuse transferred (tonnes)
            </th>
        </tr>
    </thead>
    <tbody class="govuk-table__body">

        @for (var categoryCount = 0; categoryCount < Model.TotalCategoryValues.Count; categoryCount++)
        {
            var item = @Model.TotalCategoryValues[categoryCount];

            <tr class="govuk-table__row govuk-panel-grey-background">
                <td class="govuk-table__cell govuk-!-padding-left-2">
                    <div class="category">
                        <span class="category-id" id="summary-@item.CategoryId-label">@(item.CategoryId).&nbsp;</span><span class="category-description">@item.CategoryDisplay</span>
                    </div>
                </td>
                <td class="govuk-table__cell govuk-table__cell--numeric @printableTonnageColumnPadding">@Model.TotalCategoryValues[categoryCount].TotalReceived</td>
                <td class="govuk-table__cell govuk-table__cell--numeric govuk-!-padding-right-1">@Model.TotalCategoryValues[categoryCount].TotalReused</td>
            </tr>
        }
    </tbody>
</table>

@if (Model.EditMode)
{
    <hr class="govuk-!-padding-top-5 govuk-section-break govuk-section-break--l govuk-section-break--visible">
}

<div class="govuk-table govuk-!-margin-bottom-0 govuk-!-padding-top-5 weee-printable-page-break-before">
    <div class="govuk-grid-column-one-half govuk-!-margin-left-0 govuk-!-padding-left-0 govuk-!-margin-bottom-0">
        <h2 class="govuk-heading-m govuk-!-padding-left-0 govuk-!-margin-left-0" style="text-align: left;">Breakdown of evidence transferred</h2>
    </div>

    @if (Model.EditMode)
    {
        <div class="govuk-grid-column-one-half govuk-body govuk-!-font-size-19" style="text-align:right; padding-right:0">
            @Html.NavigationRouteLink("Edit tonnages", "Edit tonnages for transfer note" + Model.Reference, "Scheme_edit_transfer_tonnages", new { pcsId = Model.SchemeId, evidenceNoteId = Model.EvidenceNoteId }, null)<br />
        </div>
    }
    else
    {
        <div class="govuk-grid-column-one-half govuk-printable-half-column">&nbsp;</div>
    }
</div>

<div class="ui-helper-clearfix"></div>

@for (var aatfCount = 0; aatfCount < Model.Summary.Count; aatfCount++)
{
    var aatf = Model.Summary.ElementAt(aatfCount);

    <div class="govuk-table govuk-!-margin-bottom-0">
        <div class="govuk-grid-column-full govuk-!-margin-left-0 govuk-!-padding-left-0">
            <h3 class="govuk-heading-s govuk-!-padding-top-0">@string.Format("Original AATF: {0} ({1})", aatf.AatfName, aatf.AatfApprovalNumber)</h3>
        </div>
    </div>

    <table id="transfer-notes-tonnage-@aatfCount.ToString()" class="govuk-table category-row-no-break">

        @{
            var breakdownReferenceWidthCss = string.Empty;
            var breakdownCategoryWidthCss = string.Empty;
            var breakdownTonnageWidthCss = string.Empty;

            if (Model.IsPrintable)
            {
                <colgroup>
                    <col style="width: 16%; max-width: 16%;" />
                    <col style="width: 32%; max-width: 32%;" />
                    <col style="width: 27%; max-width: 27%;" />
                    <col style="width: 27%; max-width: 27%;" />
                </colgroup>
            }
            else
            {
                breakdownReferenceWidthCss = "breakdown-reference-column";
                breakdownCategoryWidthCss = "breakdown-category-column";
                breakdownTonnageWidthCss = "breakdown-tonnage-column";
            }
        }

        <caption class="govuk-table__caption govuk-visually-hidden">Transfer tonnages for @aatf.AatfName</caption>
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th class="govuk-table__header govuk-!-text-align-left @breakdownReferenceWidthCss">
                    Reference ID
                </th>
                <th class="govuk-table__header govuk-!-text-align-left @breakdownCategoryWidthCss">
                    Category
                </th>
                <th class="govuk-table__header govuk-table__header--numeric @breakdownTonnageWidthCss @printableTonnageColumnPadding">
                    Total transferred (tonnes)
                </th>
                <th class="govuk-table__header govuk-table__header--numeric @breakdownTonnageWidthCss">
                    Total reuse transferred (tonnes)
                </th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">
            @for (var noteCount = 0; noteCount < aatf.Notes.Count; noteCount++)
            {
                var note = aatf.Notes.ElementAt(noteCount);

                for (var categoryCount = 0; categoryCount < note.CategoryValues.Count; categoryCount++)
                {
                    var category = note.CategoryValues.ElementAt(categoryCount);

                    <tr class="govuk-table__row">
                        @if (categoryCount == 0)
                        {
                            <td class="govuk-table__cell govuk-table__cell-top-align" rowspan="@(note.CategoryValues.Count)">
                                @note.ReferenceDisplay
                            </td>
                        }

                        <td class="govuk-table__cell govuk-!-text-align-left">
                            <div class="category">
                                <span class="category-id" id="@category.CategoryId-label">@(@category.CategoryId).&nbsp;</span><span class="category-description">@category.CategoryDisplay</span>
                            </div>
                        </td>
                        <td class="govuk-table__cell govuk-table__cell--numeric @printableTonnageColumnPadding">
                            @category.Received
                        </td>
                        <td class="govuk-table__cell govuk-table__cell--numeric">
                            @category.Reused
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
