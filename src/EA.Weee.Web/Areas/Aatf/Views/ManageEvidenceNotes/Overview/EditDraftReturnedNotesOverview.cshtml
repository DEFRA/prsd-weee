@using EA.Weee.Web.Extensions
@using EA.Weee.Web.Areas.Aatf.ViewModels
@using EA.Weee.Web.Infrastructure
@using EA.Weee.Web.RazorHelpers

@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.Helpers

@model EditDraftReturnedNotesViewModel

@section full_main_content{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-tabs">

                @Html.Partial("~/Areas/Aatf/Views/ManageEvidenceNotes/Overview/_ManageEvidenceNotesOverviewHeader.cshtml", Model)

                <div class="govuk-tabs">

                    @Html.Partial("~/Areas/Aatf/Views/ManageEvidenceNotes/Overview/_ManageEvidenceNotesTabs.cshtml", Model)

                    <div class="govuk-tabs__panel" id="editDraftReturnedNotes">

                        <header class="hgroup">
                            <h2 class="govuk-heading-m">
                                <span>Edit draft and returned notes</span>
                            </h2>
                        </header>

                        @using (Html.BeginForm("Index", "ManageEvidenceNotes", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("tab", Model.ActiveOverviewDisplayOption, new { id = "tab-hidden" })
                            @Html.Hidden("ManageEvidenceNoteViewModel.SelectedComplianceYear", Model.ManageEvidenceNoteViewModel.SelectedComplianceYear)
                            @Html.Hidden("ManageEvidenceNoteViewModel.AatfId", Model.ManageEvidenceNoteViewModel.AatfId)
                            @Html.Hidden("ManageEvidenceNoteViewModel.OrganisationId", Model.ManageEvidenceNoteViewModel.OrganisationId)

                            <div class="govuk-panel-grey-background govuk-!-padding-bottom-0 govuk-!-margin-bottom-0">

                                <div class="govuk-grid-row govuk-!-padding-left-3">
                                    <div class="govuk-grid-column-one-half govuk-!-padding-top-5">
                                        @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "FilterViewModel")
                                    </div>
                                </div>

                                <div class="govuk-grid-row govuk-!-padding-left-3">
                                    <div class="govuk-grid-column-full">
                                        <span class="govuk-label--s">
                                            Filter by
                                        </span>
                                    </div>
                                </div>

                                <div class="govuk-grid-row govuk-!-padding-top-5 govuk-!-padding-left-3">
                                    <div class="govuk-grid-column-one-full govuk-grid-column-one-full-from-desktop govuk-!-padding-right-0 weee-evidence-padding-right" style="width: 50% !important">
                                        @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "RecipientFiltersViewModel")
                                    </div>
                                    <div class="govuk-grid-column-one-full govuk-grid-column-one-full-from-desktop govuk-!-padding-right-0 weee-evidence-padding-right">
                                        @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "ObligationTypeFiltersViewModel")
                                    </div>
                                    <div class="govuk-grid-column-one-full govuk-grid-column-one-full-from-desktop govuk-!-padding-right-0 weee-evidence-padding-right">
                                        @Html.EditorFor(m => m.ManageEvidenceNoteViewModel, "StatusFiltersViewModel")
                                    </div>
                                    <div class="govuk-grid-column-one-full govuk-grid-column-one-full-from-desktop govuk-!-padding-top-6">
                                        @Html.Partial("~/Views/Shared/_SearchFilterButtonsPartial.cshtml", Model.ManageEvidenceNoteViewModel, new ViewDataDictionary()
                                        {
                                            new KeyValuePair<string, object>("tab", Extensions.ToDisplayString(Model.ActiveOverviewDisplayOption))
                                        })
                                    </div>
                                </div>
                            </div>
                        }

                        <table id="edit-draft-returned-notes-table" class="govuk-table">
                            <caption class="govuk-table__caption govuk-visually-hidden">Draft evidence notes</caption>
                            <thead class="govuk-table__head">
                                <tr class="govuk-table__row">
                                    <th class="govuk-table__header">
                                        Reference ID
                                    </th>
                                    <th class="govuk-table__header">
                                        Recipient
                                    </th>
                                    <th class="govuk-table__header">
                                        Obligation type
                                    </th>
                                    <th class="govuk-table__header">
                                        Status
                                    </th>
                                    <th class="govuk-table__header">@Html.Gds().VisuallyHidden("actions")</th>
                                </tr>
                            </thead>
                            <tbody class="govuk-table__body">
                                @if (Model.EvidenceNotesDataList.Any())
                                {
                                    foreach (var note in Model.EvidenceNotesDataList)
                                    {
                                        <tr class="govuk-table__row">
                                            <td class="govuk-table__cell">@note.ReferenceDisplay</td>
                                            <td class="govuk-table__cell">@note.Recipient</td>
                                            @if (note.TypeOfWaste.HasValue)
                                            {
                                                <td class="govuk-table__cell">@(note.TypeOfWaste.Value) </td>
                                            }
                                            else
                                            {
                                                <td class="govuk-table__cell"> </td>
                                            }

                                            <td class="govuk-table__cell">@note.Status.ToString() </td>
                                            <td class="govuk-table__cell" style="white-space: nowrap;">
                                                @Html.NavigationRouteLink("View", "View evidence note with reference ID " + @note.ReferenceDisplay, @note.AatfViewRouteName, new { organisationId = Model.ManageEvidenceNoteViewModel.OrganisationId, aatfId = Model.ManageEvidenceNoteViewModel.AatfId, evidenceNoteId = @note.Id, linkType = "View", Model.ManageEvidenceNoteViewModel.SelectedComplianceYear, queryString = ReturnUrlHelper.TidyQueryString(Context.Request.QueryString) }, null)
                                                @if (Model.ManageEvidenceNoteViewModel.CanCreateEdit)
                                                {
                                                    @Html.NavigationRouteLink("Edit", "Edit evidence note with reference ID " + @note.ReferenceDisplay, AatfEvidenceRedirect.EditEvidenceRouteName, new { organisationId = Model.ManageEvidenceNoteViewModel.OrganisationId, aatfId = Model.ManageEvidenceNoteViewModel.AatfId, evidenceNoteId = @note.Id, selectedComplianceYear = Model.ManageEvidenceNoteViewModel.SelectedComplianceYear, queryString = ReturnUrlHelper.TidyQueryString(Context.Request.QueryString) }, null)
                                                }
                                                
                                                @if (Model.ManageEvidenceNoteViewModel.CanDisplayCancelButton && note.Status == EA.Weee.Core.AatfEvidence.NoteStatus.Returned)
                                                {
                                                    @Html.NavigationRouteLink("Cancel", "Cancel evidence note with reference ID " + @note.ReferenceDisplay, @note.AatfViewRouteName, new { organisationId = Model.ManageEvidenceNoteViewModel.OrganisationId, aatfId = Model.ManageEvidenceNoteViewModel.AatfId, evidenceNoteId = @note.Id, selectedComplianceYear = Model.ManageEvidenceNoteViewModel.SelectedComplianceYear, queryString = ReturnUrlHelper.TidyQueryString(Context.Request.QueryString) }, null)
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5">
                                            @Html.Partial("~/Views/Shared/_NoResultsPartial.cshtml", Model, new ViewDataDictionary() { new KeyValuePair<string, object>("no-results-message", "<p>There are currently no draft or returned evidence notes </p>") })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="5">
                                            <p> Showing 0 - 0 of 0 </p>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <br />
                        @{
                            Html.RenderPartial("~/Views/Shared/_EvidenceNotesPagerPartial.cshtml", Model.EvidenceNotesDataList,
                                new ViewDataDictionary() {
                                {
                                    "pagerRouteValues", new
                                    {
                                        tab = Extensions.ToDisplayString(Model.ActiveOverviewDisplayOption),
                                        selectedComplianceYear = Model.ManageEvidenceNoteViewModel.SelectedComplianceYear,
                                        startDate = Model.ManageEvidenceNoteViewModel.SubmittedDatesFilterViewModel.StartDate.HasValue ? Model.ManageEvidenceNoteViewModel.SubmittedDatesFilterViewModel.StartDate.Value.ToShortDateString() : null,
                                        endDate = Model.ManageEvidenceNoteViewModel.SubmittedDatesFilterViewModel.EndDate.HasValue ? Model.ManageEvidenceNoteViewModel.SubmittedDatesFilterViewModel.EndDate.Value.ToShortDateString() : null,
                                        receivedId = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.ReceivedId,
                                        wasteTypeValue = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.WasteTypeValue.HasValue ? Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.WasteTypeValue.Value.ToInt() : (int?)null,
                                        noteStatusValue = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.NoteStatusValue.HasValue ? Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.NoteStatusValue.Value.ToInt() : (int?)null,
                                        submittedBy = Model.ManageEvidenceNoteViewModel.RecipientWasteStatusFilterViewModel.SubmittedBy,
                                    }
                                }
                });
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            initialiseTabs();
        });
    </script>
}