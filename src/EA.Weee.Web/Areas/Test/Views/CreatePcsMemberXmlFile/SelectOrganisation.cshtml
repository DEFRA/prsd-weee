@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.Organisations
@using EA.Weee.Web.Infrastructure.Paging
@using EA.Weee.Web.RazorHelpers
@model EA.Weee.Web.Areas.Test.ViewModels.CreatePcsMemberXmlFile.SelectOrganisationViewModel

@{
    ViewBag.Title = "Select Organisation";
}

@section main_content
{
    <header class="hgroup">
        <h1 class="heading-large">
            Select a PCS
        </h1>
    </header>

    @using (Html.BeginForm("SelectOrganisation", "CreatePcsMemberXmlFile", FormMethod.Get))
    {
        <p>Search for and select the PCS that will be used for the test file.</p>
        <p>
            If you are signed in as an external user, only organisations with which you are
            associated will be returned. If you want to search all organisations, sign in
            as an internal user.
        </p>

        @Html.ValidationSummary()

        <div class="form-group" id="companyName">
            @Html.Gds().LabelFor(m => m.OrganisationName)
            @Html.Gds().ValidationMessageFor(m => m.OrganisationName)
            @Html.Gds().TextBoxFor(m => m.OrganisationName)
        </div>

        @(this.WeeeGds().Submit("Search", new { @class = "button" }))
    }

    @if (Model.MatchingOrganisations != null)
    {
        <hr/>

        if (Model.MatchingOrganisations.TotalItemCount > 0)
        {
            <p>We have found some organisations that match the information you have provided.</p>
            var i = 0;
            foreach (PublicOrganisationData organisation in Model.MatchingOrganisations)
            {
                var isNewRow = (i % 2 == 0);

                if (isNewRow)
                {
                    @:<div class="grid-row">
                }

                <div class="column-half">

                    <h3 class="heading-small"></h3>

                    <div class="colored-header-bar"></div>

                    <ul>
                        <li>
                            <span class="bold-small">@Html.DisplayFor(m => organisation.DisplayName)</span>
                        </li>
                        <li>
                            @Html.DisplayFor(m => organisation.Address.Address1),
                        </li>
                        <li>
                            @Html.DisplayFor(m => organisation.Address.TownOrCity),
                        </li>
                        <li>
                            @Html.DisplayFor(m => organisation.Address.Postcode)
                        </li>
                    </ul>

                    @Html.ActionLink("Select this organisation", "SpecifyOptions", new { OrganisationID = organisation.Id })

                </div>

                if (!isNewRow || i == Model.MatchingOrganisations.Count() - 1)
                {
                    @:</div>
                }
                i++;
            }
            <div>
                @if (@Model.MatchingOrganisations.PageCount > 1)
            {
                    <br />
                    <span style="display: inline-block">Showing @Model.MatchingOrganisations.ItemStart - @Model.MatchingOrganisations.ItemEnd of @Model.MatchingOrganisations.TotalItemCount</span>
                    <div class="pager">

                        @Html.Pager(Model.MatchingOrganisations.PageSize, Model.MatchingOrganisations.PageNumber, Model.MatchingOrganisations.TotalItemCount).Options(o => o.RouteValues(@Model))

                    </div>
                    <br />
            }
</div>
        }
        else
        {
            <p>We haven't found any organisations that match your search criteria.</p>
        }
    }
}


