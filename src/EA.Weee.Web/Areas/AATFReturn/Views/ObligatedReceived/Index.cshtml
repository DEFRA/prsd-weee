@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Core.AatfReturn
@model EA.Weee.Web.Areas.AatfReturn.ViewModels.ObligatedReceivedViewModel
@{
    ViewBag.Title = "Received WEE";
}

<h2 class="govuk-heading-l">WEEE that has been received for treatment at @Model.OrganisationName from @Model.PcsName</h2>

<p class="govuk-body">
    This is WEEE from designated collection facilities (DCFs), distributors and final holders which a PCS has arranged for you to treat.
</p>
<p class="govuk-body">
    Provide tonnage to 3 decimal places. For example 1.238
</p>

@using (Html.BeginForm("Index", "ObligatedReceived", FormMethod.Post))
{
    <table class="govuk-table" id="obligated-weee-table">
        <tbody class="govuk-table__body">

        <td class="govuk-table__cell" style="border-bottom: 0px;"></td>

        <tr class="govuk-table__row">
            <td class="govuk-table__cell"></td>
            <td class="govuk-table__cell govuk-!-margin-bottom-0">
                <div class="govuk-body govuk-!-font-weight-bold govuk-!-margin-bottom-1 govuk-!-width-three-quarters">
                    B2C in tonnes
                </div>
            </td>
            <td class="govuk-table__cell govuk-!-margin-bottom-0">

                <div class="govuk-body govuk-!-font-weight-bold govuk-!-margin-bottom-1 govuk-!-width-three-quarters">
                    B2B in tonnes
                </div>
            </td>
        </tr>

        @for (var i = 0; i < Model.CategoryValues.Count; i++)
        {
            var category = Model.CategoryValues[i];

            <tr class="govuk-table__row">
                <td class="govuk-table__cell govuk-!-padding-bottom-0">
                    @(@category.CategoryId). @category.CategoryDisplay
                    @Html.HiddenFor(m => m.CategoryValues[i].CategoryId)
                    @Html.HiddenFor(m => m.CategoryValues[i].CategoryDisplay)
                </td>
                <td class="govuk-table__cell">
                    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.CategoryValues[i], m => m.CategoryValues[i].HouseHold)">
                        @Html.Gds().ValidationMessageFor(m => m.CategoryValues[i].HouseHold)
                        @Html.TextBoxFor(m => m.CategoryValues[i].HouseHold, new { @class = "govuk-input govuk-!-width-two-thirds weee-input" })
                    </div>
                </td>
                <td class="govuk-table__cell">
                    <div class="govuk-form-group @Html.Gds().FormGroupClass(m => m.CategoryValues[i], m => m.CategoryValues[i].NonHouseHold)">
                        @Html.Gds().ValidationMessageFor(m => m.CategoryValues[i].NonHouseHold)
                        @Html.TextBoxFor(m => m.CategoryValues[i].NonHouseHold, new { @class = "govuk-input govuk-!-width-two-thirds weee-input" })
                    </div>
                </td>
            </tr>
        }
        <tr class="govuk-table__row">
            <td class="govuk-table__cell">
                <h3 class="govuk-heading-m">Total</h3>
            </td>
            <td class="govuk-table__cell govuk-!-margin-bottom-0">
                <h3 class="govuk-heading-m" style="float: left;" id="HouseHoldTonnageTotal" name="TonnageTotal">@Model.HouseHoldTotal tonnes</h3>
            </td>
            <td class="govuk-table__cell govuk-!-margin-bottom-0">
                <h3 class="govuk-heading-m" style="float: left;" id="NonHouseHoldTonnageTotal" name="TonnageTotal">@Model.NonHouseHoldTotal tonnes</h3>
            </td>
        </tr>
        </tbody>
    </table>
    
    @Html.AntiForgeryToken()
    <form method="post" class="form" style="display: inline">
        <button type="submit" name="save" class="govuk-button" id="pcs-check-return">
            Save and continue
        </button>
    </form>
}