@using EA.Weee.Core.Helpers
@using EA.Prsd.Core.Web.Mvc.RazorHelpers
@using EA.Weee.Web.RazorHelpers
@model EA.Weee.Web.ViewModels.Shared.ViewEvidenceNoteViewModel

@if (Model.DisplayH2Title)
{
    <h2 class="govuk-heading-m">Evidence note</h2>
}
else
{
    <h1 class="govuk-heading-l">Evidence note</h1>
}

<style type="text/css">

    .category-column {
        width: 40%;
    }

    .transfer-column {
        width: 18.75%;
    }

    .received-column {
        width: 20%;
    }

    .govuk-summary-list__row {
        border-bottom: none !important;
    }

    .govuk-summary-list__key {
        margin-bottom: 0px !important;
    }

    .govuk-summary-list__value, .govuk-summary-list__key {
        padding-top: 3px !important;
        padding-bottom: 3px !important;
    }
</style>

<div class="govuk-!-margin-top-3">

    <dl class="govuk-summary-list">
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                @Html.DisplayNameFor(m => m.ReferenceDisplay)
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.ReferenceDisplay
            </dd>
        </div>
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                @Html.DisplayNameFor(m => m.Status)
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.Status.ToDisplayString()
            </dd>
        </div>

        @if (Model.DisplayRejectedReason)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.RejectedReason)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.RejectedReason)
                </dd>
            </div>
        }

        @if (Model.DisplayReturnedReason)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.ReturnedReason)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.ReturnedReason)
                </dd>
            </div>
        }

        @if (Model.DisplayCancelledReason)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.CancelledReason)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.CancelledReason)
                </dd>
            </div>
        }

        @if (Model.HasVoidReason)
        {
            if (Model.DisplayVoidedReason)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        @Html.DisplayNameFor(m => m.VoidedReason)
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Html.DisplayTextFor(m => m.VoidedReason)
                    </dd>
                </div>
            }
        }

        @if (Model.HasSubmittedDate)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.SubmittedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.SubmittedDate)
                </dd>
            </div>
        }

        @if (Model.HasApprovedDate)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.ApprovedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.ApprovedDate)
                </dd>
            </div>
        }

        @if (Model.HasRejectedDate)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.RejectedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.RejectedDate)
                </dd>
            </div>
        }

        @if (Model.HasBeenReturned)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.ReturnedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.ReturnedDate)
                </dd>
            </div>
        }

        @if (Model.HasBeenVoided)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Html.DisplayNameFor(m => m.VoidedDate)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.DisplayTextFor(m => m.VoidedDate)
                </dd>
            </div>
        }

        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                @Html.DisplayNameFor(m => m.ComplianceYearDisplay)
            </dt>
            <dd class="govuk-summary-list__value">
                @Html.DisplayTextFor(m => m.ComplianceYearDisplay)
            </dd>
        </div>

        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                @Html.DisplayNameFor(m => m.WasteDisplay)
            </dt>
            <dd class="govuk-summary-list__value">
                @Html.DisplayTextFor(m => m.WasteDisplay)
            </dd>
        </div>

        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                @Html.DisplayNameFor(m => m.ProtocolDisplay)
            </dt>
            <dd class="govuk-summary-list__value">
                @Html.DisplayTextFor(m => m.ProtocolDisplay)
            </dd>
        </div>
    </dl>

    @if (Model.DisplayEvidenceNoteHistoryData && !Model.IsPrintable)
    {
        @(this.WeeeGds().CreateProgressiveDisclosure("Transfer history",
                    @Html.Partial("~/Views/Shared/_EvidenceTransferProgressiveDisclosurePartial.cshtml").ToString(),
                    "Hidden content",
                    "Progressive disclosure",
                    "Transfer history"))
    }
</div>

@if (Model.CanVoid)
{
    using (Html.BeginForm("VoidEvidenceNote", "ManageEvidenceNotes", FormMethod.Get))  // perhaps area="admin" should be added
    {
        @Html.Hidden("evidenceNoteId", Model.Id);
        @(this.WeeeGds().Submit("Void evidence note", new { id = "voidEvidenceNoteButton", @class = "govuk-button", style = "margin-top: 20px" }, false))
    }
}

<table class="govuk-table prsd-table-small-collapse aatf-task-list-table">
    <thead class="govuk-table__head prsd-table-small-collapse prsd-table-small-collapse-header">
        <tr class="govuk-table__row govuk-table__cell--thick prsd-table-small-collapse prsd-table-small-collapse-header">
            <th class="govuk-table__header prsd-table-small-collapse" scope="col" width="33%">Site</th>
            <th class="govuk-table__header prsd-table-small-collapse" scope="col" width="33%">Operator</th>
            <th class="govuk-table__header prsd-table-small-collapse" scope="col" width="33%">Recipient</th>
        </tr>
    </thead>
    <tbody class="govuk-table__body prsd-table-small-collapse">
        <tr class="govuk-table__row govuk-table__cell--thick prsd-table-small-collapse">
            <td data-label="Site" class="govuk-table__cell prsd-table-small-collapse prsd-table-small-collapse-cell">
                <span class="prsd-long-address">
                    @Html.Raw(Model.SiteAddress)
                </span>
            </td>
            <td data-label="Operator" class="govuk-table__cell prsd-table-small-collapse prsd-table-small-collapse-cell">
                <span class="prsd-long-address">
                    @Html.Raw(Model.OperatorAddress)
                </span>
            </td>
            <td data-label="Recipient" class="govuk-table__cell prsd-table-small-collapse prsd-table-small-collapse-cell">
                <span class="prsd-long-address">
                    @Html.Raw(Model.RecipientAddress)
                </span>
            </td>
        </tr>
    </tbody>
</table>

<div class="ui-helper-clearfix"></div>
<div class="govuk-!-padding-top-7">
    <p>
        By submitting this information you confirm that the following waste and electronic equipment from UK <strong>@Model.WasteDisplay.ToLower()</strong> has been received between
        <strong>@(Model.StartDate.Value.ToShortDateString())</strong> and <strong>@(Model.EndDate.Value.ToShortDateString())</strong> at this site.
        It has been reused as whole appliances to the extent set out below. No other evidence has been issued on these WEEE materials.
    </p>
</div>

@if (Model.DisplayTransferEvidenceColumns)
{
    <div class="govuk-width-container govuk-!-padding-top-3">
        <p class="govuk-details__text">The total after transfer (tonnes) and total reused after transfer (tonnes) account for approved transfers only</p>
    </div>
}
<table class="govuk-table category-row-no-break">
    @if (Model.IsPrintable)
    {
        <colgroup>

            @if (Model.DisplayTransferEvidenceColumns)
            {
                <col style="width: 20%; max-width: 20%;" />
                <col style="width: 20%; max-width: 20%;" />
                <col style="width: 20%; max-width: 20%;" />
                <col style="width: 20%; max-width: 20%;" />
                <col style="width: 20%; max-width: 20%;" />
            }
            else
            {
                <col style="width: 30%; max-width: 30%;" />
                <col style="width: 30%; max-width: 30%;" />
                <col style="width: 30%; max-width: 30%;" />
            }
        </colgroup>
    }

    <caption class="govuk-table__caption govuk-visually-hidden">Category tonnage values</caption>
    <thead class="govuk-table__head">
        <tr class="govuk-table__row">
            @if (Model.DisplayTransferEvidenceColumns)
            {
                <th scope="col" class="govuk-table__header govuk-!-text-align-left" style="width: 28%;">Category</th>
                <th scope="col" class="govuk-table__header govuk-table__header--numeric" style="width: 17%;">Total received (tonnes)</th>
                <th scope="col" class="govuk-table__header govuk-table__header--numeric" style="width: 18%; ">Total reused as whole appliances (tonnes)</th>
                <th scope="col" class="govuk-table__header govuk-table__header--numeric" style="width: 19%; ">Total after transfer (tonnes)</th>
                <th scope="col" class="govuk-table__header govuk-table__header--numeric" style="width: 18%; ">Total reused after transfer (tonnes)</th>
            }
            else
            {

                var categoryColumnWidthCss = Model.IsPrintable ? "" : "category-column";
                var receivedColumnWithCss = Model.IsPrintable ? "" : "received-column";

                <th scope="col" class="govuk-table__header govuk-!-text-align-left @categoryColumnWidthCss">Category</th>
                <th scope="col" class="govuk-table__header govuk-table__header--numeric @receivedColumnWithCss">Total received (tonnes)</th>
                <th scope="col" class="govuk-table__header govuk-table__header--numeric @receivedColumnWithCss">Total reused as whole appliances (tonnes)</th>
            }
        </tr>
    </thead>

    <tbody class="govuk-table__body">

        @for (var i = 0; i < Model.CategoryValues.Count; i++)
        {
            var category = Model.CategoryValues[i];

            <tr class="govuk-table__row category-row-no-break" id="category-row-@category.CategoryId">
                <td class="govuk-table__cell govuk-!-text-align-left govuk-!-padding-right-1 category-cell-no-break">
                    <div class="category">
                        <span class="category-id" id="@category.CategoryId-label">@(@category.CategoryId).&nbsp;</span><span class="category-description">@category.CategoryDisplay</span>
                    </div>
                </td>
                <td class="govuk-table__cell govuk-table__cell--numeric printable-word-break category-cell-no-break">
                    @Html.Gds().VisuallyHidden("Received for " + @category.CategoryDisplay) @category.Received
                </td>
                <td class="govuk-table__cell govuk-table__cell--numeric printable-word-break category-cell-no-break">
                    @Html.Gds().VisuallyHidden("Reused for " + @category.CategoryDisplay) @category.Reused
                </td>
                @if (Model.DisplayTransferEvidenceColumns)
                {
                    var transferCategory = Model.RemainingTransferCategoryValues[i];

                    <td class="govuk-table__cell govuk-table__cell--numeric printable-word-break category-cell-no-break">
                        @Html.Gds().VisuallyHidden("Received after for  " + @transferCategory.CategoryDisplay) @transferCategory.Received
                    </td>
                    <td class="govuk-table__cell govuk-table__cell--numeric govuk-!-padding-right-1 printable-word-break category-cell-no-break">
                        @Html.Gds().VisuallyHidden("Reused after for " + @transferCategory.CategoryDisplay) @transferCategory.Reused
                    </td>
                }
            </tr>
        }


        <tr class="govuk-table__row">
            <td class="govuk-table__cell govuk-!-text-align-left">
                <p class="govuk-body"><strong>Total</strong></p>
            </td>
            <td class="govuk-table__cell govuk-table__cell--numeric printable-word-break">
                <p class="govuk-body" id="ReceivedTotal">@Model.ReceivedTotal</p>
            </td>
            <td class="govuk-table__cell govuk-table__cell--numeric printable-word-break">
                <p class="govuk-body" id="ReusedTotal">@Model.ReusedTotal</p>
            </td>
            @if (Model.DisplayTransferEvidenceColumns)
            {
                <td class="govuk-table__cell govuk-table__cell--numeric printable-word-break">
                    <p class="govuk-body" id="TransferReceivedTotal">@Model.TransferReceivedRemainingTotalDisplay</p>
                </td>
                <td class="govuk-table__cell govuk-table__cell--numeric printable-word-break govuk-!-padding-right-1">
                    <p class="govuk-body" id="TransferReusedTotal">@Model.TransferReusedRemainingTotalDisplay</p>
                </td>
            }
        </tr>

    </tbody>
</table>

@if (Model.IsPrintable && Model.DisplayEvidenceNoteHistoryData)
{
    <div style="padding-top: 50px"></div>
    <h2 class="govuk-heading-m">Transfer history</h2>
    @Html.Partial("~/Views/Shared/_EvidenceTransferProgressiveDisclosurePartial.cshtml", Model)
}
